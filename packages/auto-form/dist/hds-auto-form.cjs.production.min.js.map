{"version":3,"file":"hds-auto-form.cjs.production.min.js","sources":["../src/components/AutoForm.tsx"],"sourcesContent":["import { Box, Button, VStack } from '@chakra-ui/react';\r\nimport { InputField, TextAreaField } from '@highoutput/hds-forms';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport React, { FC } from 'react';\r\nimport { useForm, UseFormReturn } from 'react-hook-form';\r\n\r\nexport type AutoFormProps = {\r\n  yupSchema?: any;\r\n  onSubmitForm?(v: any): void;\r\n  placeholders?: Array<string>;\r\n};\r\n\r\nexport enum InputTypeEnum {\r\n  Textarea = 'textarea',\r\n  Input = 'input',\r\n}\r\n\r\nexport interface InputTypeProps {\r\n  key: string;\r\n  label: string;\r\n  placeholder: string;\r\n}\r\n\r\nconst getInputType = (\r\n  input: InputTypeProps,\r\n  type: InputTypeEnum,\r\n  form: UseFormReturn\r\n) => {\r\n  const { key, placeholder, label } = input;\r\n  const { register, formState } = form;\r\n  const { isSubmitting, errors } = formState;\r\n  const error = errors[`${key}`]?.message as unknown as string;\r\n\r\n  const input_type = {\r\n    textarea: (\r\n      // @ts-ignore \"Bug\"\r\n      <TextAreaField\r\n        {...register(key)}\r\n        key={key}\r\n        id={key}\r\n        label={label}\r\n        placeholder={placeholder}\r\n        errorMsg={error}\r\n        disabled={isSubmitting}\r\n        width=\"100%\"\r\n      />\r\n    ),\r\n    input: (\r\n      <InputField\r\n        {...register(key)}\r\n        key={key}\r\n        id={key}\r\n        label={label}\r\n        placeholder={placeholder}\r\n        errorMsg={error}\r\n        disabled={isSubmitting}\r\n      />\r\n    ),\r\n  };\r\n\r\n  return input_type[type];\r\n};\r\n\r\nconst AutoForm: FC<AutoFormProps> = (props) => {\r\n  const { yupSchema, onSubmitForm, placeholders } = props;\r\n\r\n  const dataKey = Object.keys(yupSchema.fields);\r\n\r\n  const form = useForm({\r\n    resolver: yupResolver(yupSchema),\r\n\r\n    shouldUnregister: true,\r\n  });\r\n\r\n  const { handleSubmit } = form;\r\n\r\n  const onSubmitData = (s: any) => {\r\n    if (onSubmitForm) onSubmitForm(s);\r\n  };\r\n\r\n  return (\r\n    <Box width={512}>\r\n      <VStack as={'form'} onSubmitCapture={handleSubmit(onSubmitData)}>\r\n        {dataKey.map((key, idx) => {\r\n          const input = {\r\n            key,\r\n            label:\r\n              yupSchema.fields[`${key}`].spec.label ??\r\n              key.charAt(0).toUpperCase() + key.slice(1),\r\n            placeholder: placeholders?.[idx],\r\n          } as InputTypeProps;\r\n          const type = yupSchema.fields[`${key}`].spec?.meta?.type || 'input';\r\n\r\n          return getInputType(input, type, form);\r\n        })}\r\n        <Button\r\n          type=\"submit\"\r\n          variant={'primary'}\r\n          width={'100%'}\r\n          data-testid=\"button.form.submit\"\r\n        >\r\n          Submit\r\n        </Button>\r\n      </VStack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AutoForm;\r\n"],"names":["InputTypeEnum","props","yupSchema","onSubmitForm","placeholders","dataKey","Object","keys","fields","form","useForm","resolver","yupResolver","shouldUnregister","React","Box","width","VStack","as","onSubmitCapture","handleSubmit","s","map","key","idx","input","type","placeholder","label","register","formState","isSubmitting","error","errors","_errors","message","textarea","TextAreaField","id","errorMsg","disabled","InputField","getInputType","spec","charAt","toUpperCase","slice","_yupSchema$fields$spe2","meta","_yupSchema$fields$spe3","Button","variant"],"mappings":"0EAYYA,4MAAZ,SAAYA,GACVA,sBACAA,gBAFF,CAAYA,IAAAA,wBAmDwB,SAACC,GACnC,IAAQC,EAA0CD,EAA1CC,UAAWC,EAA+BF,EAA/BE,aAAcC,EAAiBH,EAAjBG,aAE3BC,EAAUC,OAAOC,KAAKL,EAAUM,QAEhCC,EAAOC,UAAQ,CACnBC,SAAUC,cAAYV,GAEtBW,kBAAkB,IASpB,OACEC,gBAACC,OAAIC,MAAO,KACVF,gBAACG,UAAOC,GAAI,OAAQC,iBAAiBC,EARhBX,EAAjBW,eAEa,SAACC,GAChBlB,GAAcA,EAAakB,OAM1BhB,EAAQiB,KAAI,SAACC,EAAKC,aAUjB,OAtEW,SACnBC,EACAC,EACAjB,SAEQc,EAA4BE,EAA5BF,IAAKI,EAAuBF,EAAvBE,YAAaC,EAAUH,EAAVG,MAClBC,EAAwBpB,EAAxBoB,SAAUC,EAAcrB,EAAdqB,UACVC,EAAyBD,EAAzBC,aACFC,WAD2BF,EAAXG,UACEV,WAAVW,EAAkBC,QA6BhC,MA3BmB,CACjBC,SAEEtB,gBAACuB,iCACKR,EAASN,IACbA,IAAKA,EACLe,GAAIf,EACJK,MAAOA,EACPD,YAAaA,EACbY,SAAUP,EACVQ,SAAUT,EACVf,MAAM,UAGVS,MACEX,gBAAC2B,8BACKZ,EAASN,IACbA,IAAKA,EACLe,GAAIf,EACJK,MAAOA,EACPD,YAAaA,EACbY,SAAUP,EACVQ,SAAUT,MAKEL,GAiCHgB,CATO,CACZnB,IAAAA,EACAK,eACE1B,EAAUM,UAAUe,GAAOoB,KAAKf,SAChCL,EAAIqB,OAAO,GAAGC,cAAgBtB,EAAIuB,MAAM,GAC1CnB,kBAAavB,SAAAA,EAAeoB,cAEjBtB,EAAUM,UAAUe,GAAOoB,gBAA3BI,EAAiCC,aAAjCC,EAAuCvB,OAAQ,QAE3BjB,MAEnCK,gBAACoC,UACCxB,KAAK,SACLyB,QAAS,UACTnC,MAAO,qBACK"}