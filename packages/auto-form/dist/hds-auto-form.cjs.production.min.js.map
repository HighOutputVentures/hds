{"version":3,"file":"hds-auto-form.cjs.production.min.js","sources":["../src/components/AutoForm.tsx"],"sourcesContent":["import { Box, Button, VStack } from '@chakra-ui/react';\nimport { InputField, TextAreaField } from '@highoutput/hds-forms';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport React, { FC } from 'react';\nimport { useForm, UseFormReturn } from 'react-hook-form';\n\nexport type AutoFormProps = {\n  yupSchema?: any;\n  onSubmitForm?(v: any): void;\n  placeholders?: Array<string>;\n};\n\nexport enum InputTypeEnum {\n  Textarea = 'textarea',\n  Input = 'input',\n}\n\nexport interface InputTypeProps {\n  key: string;\n  label: string;\n  placeholder: string;\n}\n\nconst getInputType = (\n  input: InputTypeProps,\n  type: InputTypeEnum,\n  form: UseFormReturn\n) => {\n  const { key, placeholder, label } = input;\n  const { register, formState } = form;\n  const { isSubmitting, errors } = formState;\n  const error = errors[`${key}`]?.message as unknown as string;\n\n  const input_type = {\n    textarea: (\n      <TextAreaField\n        {...register(key)}\n        key={key}\n        id={key}\n        label={label}\n        placeholder={placeholder}\n        errorMsg={error}\n        disabled={isSubmitting}\n        width=\"100%\"\n      />\n    ),\n    input: (\n      <InputField\n        {...register(key)}\n        key={key}\n        id={key}\n        label={label}\n        placeholder={placeholder}\n        errorMsg={error}\n        disabled={isSubmitting}\n      />\n    ),\n  };\n\n  return input_type[type];\n};\n\nconst AutoForm: FC<AutoFormProps> = (props) => {\n  const { yupSchema, onSubmitForm, placeholders } = props;\n\n  const dataKey = Object.keys(yupSchema.fields);\n\n  const form = useForm({\n    resolver: yupResolver(yupSchema),\n\n    shouldUnregister: true,\n  });\n\n  const { handleSubmit } = form;\n\n  const onSubmitData = (s: any) => {\n    if (onSubmitForm) onSubmitForm(s);\n  };\n\n  return (\n    <Box width={512}>\n      <VStack as={'form'} onSubmitCapture={handleSubmit(onSubmitData)}>\n        {dataKey.map((key, idx) => {\n          const input = {\n            key,\n            label:\n              yupSchema.fields[`${key}`].spec.label ??\n              key.charAt(0).toUpperCase() + key.slice(1),\n            placeholder: placeholders?.[idx],\n          } as InputTypeProps;\n          const type = yupSchema.fields[`${key}`].spec?.meta?.type || 'input';\n\n          return getInputType(input, type, form);\n        })}\n        <Button\n          type=\"submit\"\n          variant={'primary'}\n          width={'100%'}\n          data-testid=\"button.form.submit\"\n        >\n          Submit\n        </Button>\n      </VStack>\n    </Box>\n  );\n};\n\nexport default AutoForm;\n"],"names":["InputTypeEnum","props","yupSchema","onSubmitForm","placeholders","dataKey","Object","keys","fields","form","useForm","resolver","yupResolver","shouldUnregister","React","Box","width","VStack","as","onSubmitCapture","handleSubmit","s","map","key","idx","input","type","placeholder","label","register","formState","isSubmitting","error","errors","_errors","message","textarea","TextAreaField","id","errorMsg","disabled","InputField","getInputType","spec","charAt","toUpperCase","slice","_yupSchema$fields$spe2","meta","_yupSchema$fields$spe3","Button","variant"],"mappings":"0EAYYA,4MAAZ,SAAYA,GACVA,sBACAA,gBAFF,CAAYA,IAAAA,wBAkDwB,SAACC,GACnC,IAAQC,EAA0CD,EAA1CC,UAAWC,EAA+BF,EAA/BE,aAAcC,EAAiBH,EAAjBG,aAE3BC,EAAUC,OAAOC,KAAKL,EAAUM,QAEhCC,EAAOC,UAAQ,CACnBC,SAAUC,cAAYV,GAEtBW,kBAAkB,IASpB,OACEC,gBAACC,OAAIC,MAAO,KACVF,gBAACG,UAAOC,GAAI,OAAQC,iBAAiBC,EARhBX,EAAjBW,eAEa,SAACC,GAChBlB,GAAcA,EAAakB,OAM1BhB,EAAQiB,KAAI,SAACC,EAAKC,aAUjB,OArEW,SACnBC,EACAC,EACAjB,SAEQc,EAA4BE,EAA5BF,IAAKI,EAAuBF,EAAvBE,YAAaC,EAAUH,EAAVG,MAClBC,EAAwBpB,EAAxBoB,SAAUC,EAAcrB,EAAdqB,UACVC,EAAyBD,EAAzBC,aACFC,WAD2BF,EAAXG,UACEV,WAAVW,EAAkBC,QA4BhC,MA1BmB,CACjBC,SACEtB,gBAACuB,iCACKR,EAASN,IACbA,IAAKA,EACLe,GAAIf,EACJK,MAAOA,EACPD,YAAaA,EACbY,SAAUP,EACVQ,SAAUT,EACVf,MAAM,UAGVS,MACEX,gBAAC2B,8BACKZ,EAASN,IACbA,IAAKA,EACLe,GAAIf,EACJK,MAAOA,EACPD,YAAaA,EACbY,SAAUP,EACVQ,SAAUT,MAKEL,GAiCHgB,CATO,CACZnB,IAAAA,EACAK,eACE1B,EAAUM,UAAUe,GAAOoB,KAAKf,SAChCL,EAAIqB,OAAO,GAAGC,cAAgBtB,EAAIuB,MAAM,GAC1CnB,kBAAavB,SAAAA,EAAeoB,cAEjBtB,EAAUM,UAAUe,GAAOoB,gBAA3BI,EAAiCC,aAAjCC,EAAuCvB,OAAQ,QAE3BjB,MAEnCK,gBAACoC,UACCxB,KAAK,SACLyB,QAAS,UACTnC,MAAO,qBACK"}