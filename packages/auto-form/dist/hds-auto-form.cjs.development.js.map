{"version":3,"file":"hds-auto-form.cjs.development.js","sources":["../src/components/AutoForm.tsx"],"sourcesContent":["import { Box, Button, VStack } from '@chakra-ui/react';\r\nimport { InputField, TextAreaField } from '@highoutput/hds-forms';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport React, { FC } from 'react';\r\nimport { useForm, UseFormReturn } from 'react-hook-form';\r\n\r\nexport type AutoFormProps = {\r\n  yupSchema?: any;\r\n  onSubmitForm?(v: any): void;\r\n  placeholders?: Array<string>;\r\n};\r\n\r\nexport enum InputTypeEnum {\r\n  Textarea = 'textarea',\r\n  Input = 'input',\r\n}\r\n\r\nexport interface InputTypeProps {\r\n  key: string;\r\n  label: string;\r\n  placeholder: string;\r\n}\r\n\r\nconst getInputType = (\r\n  input: InputTypeProps,\r\n  type: InputTypeEnum,\r\n  form: UseFormReturn\r\n) => {\r\n  const { key, placeholder, label } = input;\r\n  const { register, formState } = form;\r\n  const { isSubmitting, errors } = formState;\r\n  const error = errors[`${key}`]?.message as unknown as string;\r\n\r\n  const input_type = {\r\n    textarea: (\r\n      <TextAreaField\r\n        {...register(key)}\r\n        key={key}\r\n        id={key}\r\n        label={label}\r\n        placeholder={placeholder}\r\n        errorMsg={error}\r\n        disabled={isSubmitting}\r\n        width=\"100%\"\r\n      />\r\n    ),\r\n    input: (\r\n      <InputField\r\n        {...register(key)}\r\n        key={key}\r\n        id={key}\r\n        label={label}\r\n        placeholder={placeholder}\r\n        errorMsg={error}\r\n        disabled={isSubmitting}\r\n      />\r\n    ),\r\n  };\r\n\r\n  return input_type[type];\r\n};\r\n\r\nconst AutoForm: FC<AutoFormProps> = (props) => {\r\n  const { yupSchema, onSubmitForm, placeholders } = props;\r\n\r\n  const dataKey = Object.keys(yupSchema.fields);\r\n\r\n  const form = useForm({\r\n    resolver: yupResolver(yupSchema),\r\n\r\n    shouldUnregister: true,\r\n  });\r\n\r\n  const { handleSubmit } = form;\r\n\r\n  const onSubmitData = (s: any) => {\r\n    if (onSubmitForm) onSubmitForm(s);\r\n  };\r\n\r\n  return (\r\n    <Box width={512}>\r\n      <VStack as={'form'} onSubmitCapture={handleSubmit(onSubmitData)}>\r\n        {dataKey.map((key, idx) => {\r\n          const input = {\r\n            key,\r\n            label:\r\n              yupSchema.fields[`${key}`].spec.label ??\r\n              key.charAt(0).toUpperCase() + key.slice(1),\r\n            placeholder: placeholders?.[idx],\r\n          } as InputTypeProps;\r\n          const type = yupSchema.fields[`${key}`].spec?.meta?.type || 'input';\r\n\r\n          return getInputType(input, type, form);\r\n        })}\r\n        <Button\r\n          type=\"submit\"\r\n          variant={'primary'}\r\n          width={'100%'}\r\n          data-testid=\"button.form.submit\"\r\n        >\r\n          Submit\r\n        </Button>\r\n      </VStack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AutoForm;\r\n"],"names":["InputTypeEnum","getInputType","input","type","form","key","placeholder","label","register","formState","isSubmitting","errors","error","message","input_type","textarea","React","TextAreaField","id","errorMsg","disabled","width","InputField","AutoForm","props","yupSchema","onSubmitForm","placeholders","dataKey","Object","keys","fields","useForm","resolver","yupResolver","shouldUnregister","handleSubmit","onSubmitData","s","Box","VStack","as","onSubmitCapture","map","idx","spec","charAt","toUpperCase","slice","meta","Button","variant"],"mappings":"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"}