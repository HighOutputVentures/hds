{"version":3,"file":"hds-array-field.cjs.development.js","sources":["../src/components/validation.ts","../src/components/ArrayField.tsx"],"sourcesContent":["import { array, object, SchemaOf, string, InferType } from 'yup';\n\nexport interface ArrayInputFieldProps {\n  value: string;\n}\n\nexport const ArrayFieldSchema: SchemaOf<ArrayInputFieldProps> = object()\n  .shape({\n    input: array(\n      object().shape({\n        value: string().required('input is required'),\n      })\n    ),\n  })\n  .required();\n\nexport type ArrayFieldTypeValues = InferType<typeof ArrayFieldSchema>;\n","import { AddIcon, DeleteIcon } from '@chakra-ui/icons';\nimport { Button, Flex, Icon, Text, VStack } from '@chakra-ui/react';\nimport { InputField } from '@highoutput/hds-forms';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport React, { ReactNode } from 'react';\nimport { useFieldArray, useForm } from 'react-hook-form';\nimport { ArrayFieldSchema, ArrayFieldTypeValues } from './validation';\n\nexport interface ArrayFieldProps {\n  buttonRemoveChildren?: ReactNode;\n  buttonAddChildren?: ReactNode;\n  defaultValues: {\n    input: ArrayFieldTypeValues[];\n  };\n  onChange: (data: Record<string, any>) => void;\n  onRemove: (data: Record<string, any>) => void;\n  onAppend: (data: Record<string, any>) => void;\n  onBlur: (data: Record<string, any>) => void;\n  maxValue?: number;\n  label?: string;\n  placeholder?: string;\n  isRequired?: boolean;\n}\n\nconst ArrayField = (props: ArrayFieldProps) => {\n  const {\n    placeholder,\n    defaultValues,\n\n    onChange,\n    onRemove,\n    onBlur,\n    onAppend,\n    label,\n    isRequired,\n    buttonAddChildren,\n    buttonRemoveChildren,\n    maxValue,\n  } = props;\n  const { control, register, handleSubmit, formState } = useForm<{\n    input: ArrayFieldTypeValues[];\n  }>({\n    defaultValues,\n    resolver: isRequired ? yupResolver(ArrayFieldSchema) : undefined,\n  });\n\n  const { fields, append, remove } = useFieldArray({\n    control,\n    name: 'input',\n  });\n\n  const handleAddField = handleSubmit(async (data) => {\n    if (maxValue && fields.length <= maxValue - 1) {\n      append({\n        value: '',\n      });\n      onAppend(data);\n    }\n  });\n\n  const handleOnBlurInput = handleSubmit(async (data) => {\n    onBlur(data);\n  });\n\n  const handleRemove = handleSubmit(async (data) => {\n    onRemove(data);\n  });\n\n  const handleOnChangeInput = handleSubmit(async (data) => {\n    onChange(data);\n  });\n\n  return (\n    <Flex flexDir=\"column\" gap={2}>\n      {label && <Text>{label}</Text>}\n      {fields.map((item, idx) => (\n        <Flex\n          gap={2}\n          key={item.id}\n          onBlur={handleOnBlurInput}\n          onChange={handleOnChangeInput}\n        >\n          <InputField\n            id={'input'}\n            placeholder={placeholder ?? ''}\n            {...register(`input.${idx}.value`)}\n            errorMsg={\n              isRequired ? formState.errors?.input?.[idx]?.value?.message : ''\n            }\n          />\n          <VStack>\n            <Button\n              variant=\"outline\"\n              onClick={() => {\n                remove(idx);\n                handleRemove();\n              }}\n              disabled={fields.length <= 1}\n              width=\"32px\"\n              height=\"40px\"\n            >\n              {buttonRemoveChildren ? (\n                buttonRemoveChildren\n              ) : (\n                <Icon as={DeleteIcon} />\n              )}\n            </Button>\n            {idx === fields.length - 1 && (\n              <Button\n                variant=\"outline\"\n                width=\"32px\"\n                height=\"40px\"\n                disabled={maxValue === fields.length}\n                onClick={handleAddField}\n              >\n                {buttonAddChildren ? buttonAddChildren : <Icon as={AddIcon} />}\n              </Button>\n            )}\n          </VStack>\n        </Flex>\n      ))}\n    </Flex>\n  );\n};\n\nexport default ArrayField;\n"],"names":["ArrayFieldSchema","object","shape","input","array","value","string","required","ArrayField","props","placeholder","defaultValues","onChange","onRemove","onBlur","onAppend","label","isRequired","buttonAddChildren","buttonRemoveChildren","maxValue","useForm","resolver","yupResolver","undefined","control","register","handleSubmit","formState","useFieldArray","name","fields","append","remove","handleAddField","data","length","handleOnBlurInput","handleRemove","handleOnChangeInput","React","Flex","flexDir","gap","Text","map","item","idx","key","id","InputField","errorMsg","errors","message","VStack","Button","variant","onClick","disabled","width","height","Icon","as","DeleteIcon","AddIcon"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMO,IAAMA,gBAAgB,gBAAmCC,YAAM,EAAE,CACrEC,KAAK,CAAC;EACLC,KAAK,EAAEC,WAAK,CACVH,YAAM,EAAE,CAACC,KAAK,CAAC;IACbG,KAAK,EAAEC,YAAM,EAAE,CAACC,QAAQ,CAAC,mBAAmB;GAC7C,CAAC;CAEL,CAAC,CACDA,QAAQ,EAAE;;ACUb,IAAMC,UAAU,GAAG,SAAbA,UAAU,CAAIC,KAAsB;EACxC,IACEC,WAAW,GAYTD,KAAK,CAZPC,WAAW;IACXC,aAAa,GAWXF,KAAK,CAXPE,aAAa;IAEbC,QAAQ,GASNH,KAAK,CATPG,QAAQ;IACRC,QAAQ,GAQNJ,KAAK,CARPI,QAAQ;IACRC,MAAM,GAOJL,KAAK,CAPPK,MAAM;IACNC,QAAQ,GAMNN,KAAK,CANPM,QAAQ;IACRC,KAAK,GAKHP,KAAK,CALPO,KAAK;IACLC,UAAU,GAIRR,KAAK,CAJPQ,UAAU;IACVC,iBAAiB,GAGfT,KAAK,CAHPS,iBAAiB;IACjBC,oBAAoB,GAElBV,KAAK,CAFPU,oBAAoB;IACpBC,QAAQ,GACNX,KAAK,CADPW,QAAQ;EAEV,eAAuDC,qBAAO,CAE3D;MACDV,aAAa,EAAbA,aAAa;MACbW,QAAQ,EAAEL,UAAU,GAAGM,eAAW,CAACvB,gBAAgB,CAAC,GAAGwB;KACxD,CAAC;IALMC,OAAO,YAAPA,OAAO;IAAEC,QAAQ,YAARA,QAAQ;IAAEC,YAAY,YAAZA,YAAY;IAAEC,SAAS,YAATA,SAAS;EAOlD,qBAAmCC,2BAAa,CAAC;MAC/CJ,OAAO,EAAPA,OAAO;MACPK,IAAI,EAAE;KACP,CAAC;IAHMC,MAAM,kBAANA,MAAM;IAAEC,MAAM,kBAANA,MAAM;IAAEC,MAAM,kBAANA,MAAM;EAK9B,IAAMC,cAAc,GAAGP,YAAY;IAAA,sEAAC,iBAAOQ,IAAI;MAAA;QAAA;UAAA;YAAA;cAC7C,IAAIf,QAAQ,IAAIW,MAAM,CAACK,MAAM,IAAIhB,QAAQ,GAAG,CAAC,EAAE;gBAC7CY,MAAM,CAAC;kBACL3B,KAAK,EAAE;iBACR,CAAC;gBACFU,QAAQ,CAACoB,IAAI,CAAC;;YACf;YAAA;cAAA;;;;KACF;IAAA;MAAA;;MAAC;EAEF,IAAME,iBAAiB,GAAGV,YAAY;IAAA,uEAAC,kBAAOQ,IAAI;MAAA;QAAA;UAAA;YAAA;cAChDrB,MAAM,CAACqB,IAAI,CAAC;YAAC;YAAA;cAAA;;;;KACd;IAAA;MAAA;;MAAC;EAEF,IAAMG,YAAY,GAAGX,YAAY;IAAA,uEAAC,kBAAOQ,IAAI;MAAA;QAAA;UAAA;YAAA;cAC3CtB,QAAQ,CAACsB,IAAI,CAAC;YAAC;YAAA;cAAA;;;;KAChB;IAAA;MAAA;;MAAC;EAEF,IAAMI,mBAAmB,GAAGZ,YAAY;IAAA,uEAAC,kBAAOQ,IAAI;MAAA;QAAA;UAAA;YAAA;cAClDvB,QAAQ,CAACuB,IAAI,CAAC;YAAC;YAAA;cAAA;;;;KAChB;IAAA;MAAA;;MAAC;EAEF,OACEK,oBAACC,UAAI;IAACC,OAAO,EAAC,QAAQ;IAACC,GAAG,EAAE;KACzB3B,KAAK,IAAIwB,oBAACI,UAAI,QAAE5B,KAAK,CAAQ,EAC7Be,MAAM,CAACc,GAAG,CAAC,UAACC,IAAI,EAAEC,GAAG;IAAA;IAAA,OACpBP,oBAACC,UAAI;MACHE,GAAG,EAAE,CAAC;MACNK,GAAG,EAAEF,IAAI,CAACG,EAAE;MACZnC,MAAM,EAAEuB,iBAAiB;MACzBzB,QAAQ,EAAE2B;OAEVC,oBAACU,mBAAU;MACTD,EAAE,EAAE,OAAO;MACXvC,WAAW,EAAEA,WAAW,WAAXA,WAAW,GAAI;OACxBgB,QAAQ,YAAUqB,GAAG,YAAS;MAClCI,QAAQ,EACNlC,UAAU,wBAAGW,SAAS,CAACwB,MAAM,8CAAhB,kBAAkBjD,KAAK,+CAAvB,sBAA0B4C,GAAG,CAAC,+CAA9B,uBAAgC1C,KAAK,qBAArC,uBAAuCgD,OAAO,GAAG;OAEhE,EACFb,oBAACc,YAAM,QACLd,oBAACe,YAAM;MACLC,OAAO,EAAC,SAAS;MACjBC,OAAO,EAAE;QACPxB,MAAM,CAACc,GAAG,CAAC;QACXT,YAAY,EAAE;OACf;MACDoB,QAAQ,EAAE3B,MAAM,CAACK,MAAM,IAAI,CAAC;MAC5BuB,KAAK,EAAC,MAAM;MACZC,MAAM,EAAC;OAENzC,oBAAoB,GACnBA,oBAAoB,GAEpBqB,oBAACqB,UAAI;MAACC,EAAE,EAAEC;MACX,CACM,EACRhB,GAAG,KAAKhB,MAAM,CAACK,MAAM,GAAG,CAAC,IACxBI,oBAACe,YAAM;MACLC,OAAO,EAAC,SAAS;MACjBG,KAAK,EAAC,MAAM;MACZC,MAAM,EAAC,MAAM;MACbF,QAAQ,EAAEtC,QAAQ,KAAKW,MAAM,CAACK,MAAM;MACpCqB,OAAO,EAAEvB;OAERhB,iBAAiB,GAAGA,iBAAiB,GAAGsB,oBAACqB,UAAI;MAACC,EAAE,EAAEE;MAAW,CAEjE,CACM,CACJ;GACR,CAAC,CACG;AAEX,CAAC;;;;"}