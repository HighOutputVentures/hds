{"version":3,"file":"hds-array-field.cjs.production.min.js","sources":["../src/components/validation.ts","../src/components/ArrayField.tsx"],"sourcesContent":["import { array, object, SchemaOf, string, InferType } from 'yup';\n\nexport interface ArrayInputFieldProps {\n  value: string;\n}\n\nexport const ArrayFieldSchema: SchemaOf<ArrayInputFieldProps> = object()\n  .shape({\n    input: array(\n      object().shape({\n        value: string().required('input is required'),\n      })\n    ),\n  })\n  .required();\n\nexport type ArrayFieldTypeValues = InferType<typeof ArrayFieldSchema>;\n","import { AddIcon, DeleteIcon } from '@chakra-ui/icons';\nimport { Button, Flex, Icon, Text, VStack } from '@chakra-ui/react';\nimport { InputField } from '@highoutput/hds-forms';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport React, { ReactNode } from 'react';\nimport { useFieldArray, useForm } from 'react-hook-form';\nimport { ArrayFieldSchema, ArrayFieldTypeValues } from './validation';\n\nexport interface ArrayFieldProps {\n  buttonRemoveChildren?: ReactNode;\n  buttonAddChildren?: ReactNode;\n  defaultValues: {\n    input: ArrayFieldTypeValues[];\n  };\n  onChange: (data: Record<string, any>) => void;\n  onRemove: (data: Record<string, any>) => void;\n  onAppend: (data: Record<string, any>) => void;\n  onBlur: (data: Record<string, any>) => void;\n  maxValue?: number;\n  label?: string;\n  placeholder?: string;\n  isRequired?: boolean;\n}\n\nconst ArrayField = (props: ArrayFieldProps) => {\n  const {\n    placeholder,\n    defaultValues,\n\n    onChange,\n    onRemove,\n    onBlur,\n    onAppend,\n    label,\n    isRequired,\n    buttonAddChildren,\n    buttonRemoveChildren,\n    maxValue,\n  } = props;\n  const { control, register, handleSubmit, formState } = useForm<{\n    input: ArrayFieldTypeValues[];\n  }>({\n    defaultValues,\n    resolver: isRequired ? yupResolver(ArrayFieldSchema) : undefined,\n  });\n\n  const { fields, append, remove } = useFieldArray({\n    control,\n    name: 'input',\n  });\n\n  const handleAddField = handleSubmit(async (data) => {\n    if (maxValue && fields.length <= maxValue - 1) {\n      append({\n        value: '',\n      });\n      onAppend(data);\n    }\n  });\n\n  const handleOnBlurInput = handleSubmit(async (data) => {\n    onBlur(data);\n  });\n\n  const handleRemove = handleSubmit(async (data) => {\n    onRemove(data);\n  });\n\n  const handleOnChangeInput = handleSubmit(async (data) => {\n    onChange(data);\n  });\n\n  return (\n    <Flex flexDir=\"column\" gap={2}>\n      {label && <Text>{label}</Text>}\n      {fields.map((item, idx) => (\n        <Flex\n          gap={2}\n          key={item.id}\n          onBlur={handleOnBlurInput}\n          onChange={handleOnChangeInput}\n        >\n          <InputField\n            id={'input'}\n            placeholder={placeholder ?? ''}\n            {...register(`input.${idx}.value`)}\n            errorMsg={\n              isRequired ? formState.errors?.input?.[idx]?.value?.message : ''\n            }\n          />\n          <VStack>\n            <Button\n              variant=\"outline\"\n              onClick={() => {\n                remove(idx);\n                handleRemove();\n              }}\n              disabled={fields.length <= 1}\n              width=\"32px\"\n              height=\"40px\"\n            >\n              {buttonRemoveChildren ? (\n                buttonRemoveChildren\n              ) : (\n                <Icon as={DeleteIcon} />\n              )}\n            </Button>\n            {idx === fields.length - 1 && (\n              <Button\n                variant=\"outline\"\n                width=\"32px\"\n                height=\"40px\"\n                disabled={maxValue === fields.length}\n                onClick={handleAddField}\n              >\n                {buttonAddChildren ? buttonAddChildren : <Icon as={AddIcon} />}\n              </Button>\n            )}\n          </VStack>\n        </Flex>\n      ))}\n    </Flex>\n  );\n};\n\nexport default ArrayField;\n"],"names":["ArrayFieldSchema","object","shape","input","array","value","string","required","props","placeholder","onChange","onRemove","onBlur","onAppend","label","isRequired","buttonAddChildren","buttonRemoveChildren","maxValue","useForm","defaultValues","resolver","yupResolver","undefined","register","handleSubmit","formState","useFieldArray","control","name","fields","append","remove","handleAddField","data","length","handleOnBlurInput","handleRemove","handleOnChangeInput","React","Flex","flexDir","gap","Text","map","item","idx","key","id","InputField","errorMsg","errors","_formState$errors","_formState$errors$inp","_formState$errors$inp2","_formState$errors$inp3","message","VStack","Button","variant","onClick","disabled","width","height","Icon","as","DeleteIcon","AddIcon"],"mappings":"ukOAMO,IAAMA,EAAmDC,WAC7DC,MAAM,CACLC,MAAOC,QACLH,WAASC,MAAM,CACbG,MAAOC,WAASC,SAAS,0BAI9BA,8BCUgB,SAACC,GAClB,IACEC,EAYED,EAZFC,YAGAC,EASEF,EATFE,SACAC,EAQEH,EARFG,SACAC,EAOEJ,EAPFI,OACAC,EAMEL,EANFK,SACAC,EAKEN,EALFM,MACAC,EAIEP,EAJFO,WACAC,EAGER,EAHFQ,kBACAC,EAEET,EAFFS,qBACAC,EACEV,EADFU,WAEqDC,UAEpD,CACDC,cAJEZ,EAXFY,cAgBAC,SAAUN,EAAaO,cAAYtB,QAAoBuB,IAJxCC,IAAAA,SAAUC,IAAAA,aAAcC,IAAAA,YAONC,gBAAc,CAC/CC,UARMA,QASNC,KAAM,UAFAC,IAAAA,OAAQC,IAAAA,OAAQC,IAAAA,OAKlBC,EAAiBR,aAAY,kBAAC,WAAOS,GAAI,6BAAA,OAAA,sBAAA,OACzChB,GAAYY,EAAOK,QAAUjB,EAAW,IAC1Ca,EAAO,CACL1B,MAAO,KAETQ,EAASqB,IACV,OAAA,UAAA,0BACF,mBAAA,oCAEKE,EAAoBX,aAAY,kBAAC,WAAOS,GAAI,6BAAA,OAAA,sBAAA,OAChDtB,EAAOsB,GAAM,OAAA,UAAA,0BACd,mBAAA,oCAEKG,EAAeZ,aAAY,kBAAC,WAAOS,GAAI,6BAAA,OAAA,sBAAA,OAC3CvB,EAASuB,GAAM,OAAA,UAAA,0BAChB,mBAAA,oCAEKI,EAAsBb,aAAY,kBAAC,WAAOS,GAAI,6BAAA,OAAA,sBAAA,OAClDxB,EAASwB,GAAM,OAAA,UAAA,0BAChB,mBAAA,oCAED,OACEK,gBAACC,QAAKC,QAAQ,SAASC,IAAK,GACzB5B,GAASyB,gBAACI,YAAM7B,GAChBgB,EAAOc,KAAI,SAACC,EAAMC,GAAG,YAAA,OACpBP,gBAACC,QACCE,IAAK,EACLK,IAAKF,EAAKG,GACVpC,OAAQwB,EACR1B,SAAU4B,GAEVC,gBAACU,4BACCD,GAAI,QACJvC,kBAAaA,EAAAA,EAAe,IACxBe,WAAkBsB,aACtBI,SACEnC,WAAaW,EAAUyB,kBAAVC,EAAkBjD,iBAAlBkD,EAA0BP,cAA1BQ,EAAgCjD,cAAhCkD,EAAuCC,QAAU,MAGlEjB,gBAACkB,cACClB,gBAACmB,UACCC,QAAQ,UACRC,QAAS,WACP5B,EAAOc,GACPT,KAEFwB,SAAU/B,EAAOK,QAAU,EAC3B2B,MAAM,OACNC,OAAO,QAEN9C,GAGCsB,gBAACyB,QAAKC,GAAIC,gBAGbpB,IAAQhB,EAAOK,OAAS,GACvBI,gBAACmB,UACCC,QAAQ,UACRG,MAAM,OACNC,OAAO,OACPF,SAAU3C,IAAaY,EAAOK,OAC9ByB,QAAS3B,GAERjB,GAAwCuB,gBAACyB,QAAKC,GAAIE"}