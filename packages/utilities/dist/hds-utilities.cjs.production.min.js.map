{"version":3,"file":"hds-utilities.cjs.production.min.js","sources":["../src/For.tsx","../src/merge.ts","../src/Show.tsx","../src/omit.ts","../src/pick.ts"],"sourcesContent":["import * as React from \"react\";\r\nimport { Fragment } from \"react\";\r\n\r\nexport type ForProps<T extends unknown[]> = {\r\n  each: T;\r\n  getKey?: (context: T[number], index: number) => string | number;\r\n  children: (context: T[number], index: number) => JSX.Element;\r\n  fallback?: JSX.Element | null;\r\n};\r\n\r\nexport default function For<T extends unknown[]>(props: ForProps<T>) {\r\n  const { each, fallback, children, getKey } = Object.assign(defaultProps, props);\r\n\r\n  if (!each.length) return fallback;\r\n\r\n  return (\r\n    <Fragment>\r\n      {each.map((value, index) => {\r\n        const Item = () => children(value, index);\r\n\r\n        return <Item key={getKey(value, index)} />;\r\n      })}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nconst defaultProps = {\r\n  fallback: null,\r\n  getKey(_: unknown, index: number) {\r\n    return index;\r\n  },\r\n};\r\n","type Dict = Record<string, any>;\r\n\r\n/**\r\n *\r\n * deeply merge objects\r\n *\r\n */\r\nexport default function merge(target: Dict, source: Dict) {\r\n  Object.keys(source).forEach((key) => {\r\n    const targetValue = target[key];\r\n    const sourceValue = source[key];\r\n\r\n    if (Array.isArray(targetValue) && Array.isArray(sourceValue)) {\r\n      target[key] = [...targetValue, ...sourceValue];\r\n    } else if (isObject(targetValue) && isObject(sourceValue)) {\r\n      target[key] = merge(targetValue, sourceValue);\r\n    } else {\r\n      target[key] = sourceValue;\r\n    }\r\n  });\r\n\r\n  return target;\r\n}\r\n\r\nfunction isObject(subject: unknown) {\r\n  return Object.prototype.toString.call(subject) === \"[object Object]\";\r\n}\r\n","import * as React from \"react\";\r\n\r\nexport type ShowProps = {\r\n  when?: boolean;\r\n  fallback?: JSX.Element | null;\r\n};\r\n\r\nexport default function Show(props: React.PropsWithChildren<ShowProps>) {\r\n  const { when, fallback, children } = Object.assign({ fallback: null }, props);\r\n\r\n  return !when ? fallback : <React.Fragment>{children}</React.Fragment>;\r\n}\r\n","export default function omit<T extends Record<string, any>, K extends string[]>(\r\n  subject: T,\r\n  ...keys: K\r\n): Omit<T, K[number]> {\r\n  const copy = { ...subject };\r\n\r\n  for (const key of keys) {\r\n    if (key in copy) {\r\n      delete copy[key];\r\n    }\r\n  }\r\n\r\n  return copy;\r\n}\r\n","export default function pick<T extends Record<string, any>, K extends keyof T>(\r\n  subject: T,\r\n  ...keys: K[]\r\n) {\r\n  const copy = { ...subject };\r\n  const picked: Partial<Record<K, T[K]>> = {};\r\n\r\n  for (const key of keys) {\r\n    if (key in copy) {\r\n      picked[key] = copy[key];\r\n    }\r\n  }\r\n\r\n  return picked;\r\n}\r\n"],"names":["defaultProps","fallback","getKey","_","index","isObject","subject","Object","prototype","toString","call","props","assign","each","children","length","React","Fragment","map","value","key","when","merge","target","source","keys","forEach","targetValue","sourceValue","Array","isArray","copy","picked"],"mappings":"2FA0BMA,EAAe,CACnBC,SAAU,KACVC,gBAAOC,EAAYC,GACjB,OAAOA,ICLX,SAASC,EAASC,GAChB,MAAmD,oBAA5CC,OAAOC,UAAUC,SAASC,KAAKJ,2PDfSK,GAC/C,MAA6CJ,OAAOK,OAAOZ,EAAcW,GAAjEE,IAAAA,KAAMZ,IAAAA,SAAUa,IAAAA,SAAUZ,IAAAA,OAElC,OAAKW,EAAKE,OAGRC,gBAACC,gBACEJ,EAAKK,KAAI,SAACC,EAAOf,GAGhB,OAAOY,iBAFM,WAAH,OAASF,EAASK,EAAOf,MAEtBgB,IAAKlB,EAAOiB,EAAOf,SAPbH,yBENEU,GAC3B,MAAqCJ,OAAOK,OAAO,CAAEX,SAAU,MAAQU,GAAzDV,IAAAA,SAEd,SAFQoB,KAEkBL,gBAACA,kBAFHF,UAETb,0BDHOqB,EAAMC,EAAcC,GAc1C,OAbAjB,OAAOkB,KAAKD,GAAQE,SAAQ,SAACN,GAC3B,IAAMO,EAAcJ,EAAOH,GACrBQ,EAAcJ,EAAOJ,GAGzBG,EAAOH,GADLS,MAAMC,QAAQH,IAAgBE,MAAMC,QAAQF,aAC5BD,EAAgBC,GACzBvB,EAASsB,IAAgBtB,EAASuB,GAC7BN,EAAMK,EAAaC,GAEnBA,KAIXL,yBEpBPjB,GAG4B,IAA5B,IAAMyB,OAAYzB,sBAFfmB,mCAAAA,oBAIH,cAAkBA,iBAAM,CAAnB,IAAML,OACLA,KAAOW,UACFA,EAAKX,GAIhB,OAAOW,yBCXPzB,GAI4C,IAD5C,IAAMyB,OAAYzB,GACZ0B,EAAmC,sBAHtCP,mCAAAA,oBAKH,cAAkBA,iBAAM,CAAnB,IAAML,OACLA,KAAOW,IACTC,EAAOZ,GAAOW,EAAKX,IAIvB,OAAOY"}