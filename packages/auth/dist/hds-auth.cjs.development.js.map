{"version":3,"file":"hds-auth.cjs.development.js","sources":["../src/components/AuthProvider/AuthContext.tsx","../src/components/AuthProvider/AuthProvider.tsx","../src/components/AuthProvider/constants.ts","../src/components/AuthProvider/getAuthState.ts","../src/components/AuthProvider/logout.ts","../src/components/AuthProvider/utils.ts","../src/components/AuthProvider/useAuthService.tsx","../src/components/AuthProvider/useAuthState.tsx","../src/components/AuthProvider/useProfile.tsx","../src/components/AuthForm/validation.ts","../src/components/AuthForm/CredentialLoginForm.tsx","../src/components/AuthForm/OTPForm.tsx","../src/components/AuthForm/OTPVerificationForm.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport type { AuthConfig } from './types';\r\n\r\nconst AuthContext = React.createContext<AuthConfig>({\r\n  hostname: '',\r\n});\r\n\r\nexport default AuthContext;\r\n","import * as React from 'react';\r\nimport AuthContext from './AuthContext';\r\nimport type { AuthConfig } from './types';\r\n\r\nexport default function AuthProvider({children, ...config}: React.PropsWithChildren<AuthConfig>) {\r\n  return <AuthContext.Provider value={config}>{children}</AuthContext.Provider>;\r\n}","const accessTokenId = '__AuthToken__';\r\n\r\nconst constants = {\r\n  accessTokenId,\r\n};\r\n\r\nexport default constants;\r\n","import cookies from 'js-cookie';\r\nimport constants from './constants';\r\nimport type { AuthState } from './types';\r\n\r\nexport default function getAuthState(): AuthState {\r\n  const token = cookies.get(constants.accessTokenId);\r\n\r\n  return {\r\n    token,\r\n    status: token ? 'authenticated' : 'unauthenticated',\r\n  };\r\n}","import cookies from 'js-cookie';\r\nimport constants from './constants';\r\n\r\nexport default function logout(callback?: () => void) {\r\n  cookies.remove(constants.accessTokenId);\r\n  callback?.();\r\n}\r\n","export async function postJson<T>(\r\n  url: string,\r\n  postfields: Record<string, unknown>\r\n): Promise<T> {\r\n  const response = await fetch(url, {\r\n    body: JSON.stringify(postfields),\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n\r\n  const parsed = await response.json();\r\n  if (!response.ok) throw new Error(parsed.error.message);\r\n  return parsed;\r\n}\r\n","import cookies from 'js-cookie';\r\nimport * as React from 'react';\r\nimport AuthContext from './AuthContext';\r\nimport constants from './constants';\r\nimport type { AuthService } from './types';\r\nimport { postJson } from './utils';\r\n\r\nexport default function useAuthService() {\r\n  const {hostname} = React.useContext(AuthContext);\r\n\r\n  const generateOtp: AuthService['generateOtp'] = React.useCallback(\r\n    async (emailAddress) => {\r\n      await postJson(`${hostname}/otp/generate`, {emailAddress});\r\n    },\r\n    [hostname],\r\n  );\r\n\r\n  const validateOtp: AuthService['validateOtp'] = React.useCallback(\r\n    async (otp) => {\r\n      const {token} = await postJson<{token: string}>(`${hostname}/otp/validate`, {otp});\r\n\r\n      cookies.set(constants.accessTokenId, token, {\r\n        secure: process.env.NODE_ENV === 'production',\r\n        expires: 29,\r\n        sameSite: 'strict',\r\n      });\r\n    },\r\n    [hostname],\r\n  );\r\n\r\n  return {\r\n    generateOtp,\r\n    validateOtp,\r\n  };\r\n}","import * as React from 'react';\r\nimport getAuthState from './getAuthState';\r\nimport type { AuthState } from './types';\r\n\r\ntype Config = {\r\n  onauthenticated: () => void;\r\n  onunauthenticated: () => void;\r\n};\r\n\r\nexport default function useAuthState({onauthenticated, onunauthenticated}: Partial<Config> = {}) {\r\n  const [state, setState] = React.useState<AuthState>({\r\n    status: 'loading',\r\n  });\r\n\r\n  const handleState = React.useCallback(() => {\r\n    const newState = getAuthState();\r\n    setState(newState);\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    handleState();\r\n    return () => setState({status: 'loading'});\r\n  }, [handleState]);\r\n\r\n  React.useEffect(() => {\r\n    document.addEventListener('visibilitychange', handleState);\r\n    return () => document.removeEventListener('visibilitychange', handleState);\r\n  }, [handleState]);\r\n\r\n  React.useEffect(() => {\r\n    if (state.status === 'authenticated') onauthenticated?.();\r\n    if (state.status === 'unauthenticated') onunauthenticated?.();\r\n  }, [onauthenticated, onunauthenticated, state.status]);\r\n\r\n  return state;\r\n}\r\n","/**\r\n *\r\n * _NOT IMPLEMENTED YET_\r\n *\r\n */\r\nexport default function useProfile() {\r\n  return {};\r\n}\r\n","import { InferType, object, SchemaOf, string } from 'yup';\r\n\r\nexport interface CredentialFormInputEmailProps {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport const withCredentialFormSchemaEmail: SchemaOf<CredentialFormInputEmailProps> = object().shape(\r\n  {\r\n    email: string()\r\n      .email('Please enter a valid email address')\r\n      .required('Email is required.'),\r\n    password: string().required('Password is required'),\r\n  }\r\n);\r\n\r\nexport type withCredentialFormSchemaEmailValues = InferType<\r\n  typeof withCredentialFormSchemaEmail\r\n>;\r\nexport interface CredentialFormInputNameProps {\r\n  name: string;\r\n  password: string;\r\n}\r\n\r\nexport const withCredentialFormSchemaName: SchemaOf<CredentialFormInputNameProps> = object().shape(\r\n  {\r\n    name: string()\r\n      .required('Name is required')\r\n      .trim(),\r\n    password: string().required('Password is required'),\r\n  }\r\n);\r\n\r\nexport type withCredentialFormSchemaNameValues = InferType<\r\n  typeof withCredentialFormSchemaName\r\n>;\r\n\r\nexport const generateEmailOTPSchema: SchemaOf<{\r\n  emailAddress: string;\r\n}> = object().shape({\r\n  emailAddress: string()\r\n    .email('Please enter a valid email address.')\r\n    .required('Email is required.'),\r\n});\r\n\r\nexport type GenerateEmailOTPSchemaValues = InferType<\r\n  typeof generateEmailOTPSchema\r\n>;\r\n\r\nexport const authenticateSchema: SchemaOf<{\r\n  otp: string;\r\n}> = object().shape({\r\n  otp: string()\r\n    .when(\r\n      '$numberOfFields',\r\n      (numberOfFields: number, authenticateSchema: any) => {\r\n        return authenticateSchema.length(\r\n          numberOfFields,\r\n          'OTP code is incomplete.'\r\n        );\r\n      }\r\n    )\r\n    .required('OTP code is required.'),\r\n});\r\n\r\nexport type AuthenticateSchemaValues = InferType<typeof authenticateSchema>;\r\n","import { ViewIcon, ViewOffIcon } from '@chakra-ui/icons';\r\nimport { Box, Button, Center, Stack, Text } from '@chakra-ui/react';\r\nimport { InputField } from '@highoutput/hds-forms';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport React, { FC, ReactNode } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nimport {\r\n  CredentialFormInputEmailProps,\r\n  CredentialFormInputNameProps,\r\n  withCredentialFormSchemaEmail,\r\n  withCredentialFormSchemaEmailValues,\r\n  withCredentialFormSchemaName,\r\n  withCredentialFormSchemaNameValues,\r\n} from './validation';\r\n\r\nexport type CredentialLoginFormDefaultProps = {\r\n  loginTitle?: ReactNode;\r\n  signUpTitle?: ReactNode;\r\n};\r\nexport interface CredentialLoginFormNameProps\r\n  extends CredentialLoginFormDefaultProps {\r\n  variant?: 'name-password';\r\n  nameLabel: string;\r\n  onSubmit?(values: CredentialFormInputNameProps): void;\r\n}\r\nexport interface CredentialLoginFormEmailProps\r\n  extends CredentialLoginFormDefaultProps {\r\n  variant?: 'email-password';\r\n  nameLabel?: never;\r\n  onSubmit?(values: CredentialFormInputEmailProps): void;\r\n}\r\n\r\nexport type CredentialLoginFormProps =\r\n  | CredentialLoginFormNameProps\r\n  | CredentialLoginFormEmailProps;\r\n\r\nconst CredentialLoginForm: FC<CredentialLoginFormProps> = (props) => {\r\n  const {\r\n    signUpTitle,\r\n    loginTitle,\r\n    variant,\r\n    onSubmit,\r\n    nameLabel = 'Username',\r\n  } = props;\r\n\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n  const [isSignUp, setIsSignUp] = React.useState(false);\r\n  const { register, handleSubmit, formState } = useForm<\r\n    withCredentialFormSchemaEmailValues & withCredentialFormSchemaNameValues\r\n  >({\r\n    resolver: yupResolver(\r\n      variant === 'name-password'\r\n        ? withCredentialFormSchemaName\r\n        : withCredentialFormSchemaEmail\r\n    ),\r\n    shouldUnregister: true,\r\n  });\r\n\r\n  const onSubmitForm = async (\r\n    values: withCredentialFormSchemaNameValues &\r\n      withCredentialFormSchemaEmailValues\r\n  ) => {\r\n    if (onSubmit) {\r\n      onSubmit(values);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box as={'form'} maxW={512} onSubmit={handleSubmit(onSubmitForm)}>\r\n      <Center m={0} p={0}>\r\n        {isSignUp && signUpTitle ? (\r\n          signUpTitle\r\n        ) : !isSignUp && loginTitle ? (\r\n          loginTitle\r\n        ) : !isSignUp && !loginTitle ? (\r\n          <Text size=\"header-3\" my={8}>\r\n            Login\r\n          </Text>\r\n        ) : (\r\n          isSignUp &&\r\n          !signUpTitle && (\r\n            <Text size=\"header-3\" my={8}>\r\n              Sign up\r\n            </Text>\r\n          )\r\n        )}\r\n      </Center>\r\n\r\n      <Stack spacing={'1rem'}>\r\n        {variant === 'name-password' ? (\r\n          <InputField\r\n            {...register('name')}\r\n            id={'name'}\r\n            label={nameLabel?.charAt(0).toUpperCase() + nameLabel?.slice(1)}\r\n            placeholder={`Input your ${nameLabel?.toLowerCase()}`}\r\n            errorMsg={formState.errors.name?.message}\r\n            disabled={formState.isSubmitting}\r\n            partProps={{\r\n              input: {\r\n                'aria-label': 'name-input',\r\n                role: 'input',\r\n              },\r\n            }}\r\n          />\r\n        ) : (\r\n          <InputField\r\n            {...register('email')}\r\n            id={'email'}\r\n            label=\"Email\"\r\n            placeholder=\"Input your email\"\r\n            errorMsg={formState.errors.email?.message}\r\n            disabled={formState.isSubmitting}\r\n            partProps={{\r\n              input: { 'aria-label': 'email-input', role: 'input' },\r\n            }}\r\n          />\r\n        )}\r\n\r\n        <InputField\r\n          {...register('password')}\r\n          id=\"password\"\r\n          label=\"Password\"\r\n          type={showPassword ? 'text' : 'password'}\r\n          placeholder=\"Input your password\"\r\n          errorMsg={formState.errors.password?.message}\r\n          disabled={formState.isSubmitting}\r\n          rightIcon={\r\n            <Button\r\n              data-testid={'show-hide-btn'}\r\n              background={'none'}\r\n              _hover={{ background: 'none' }}\r\n              _active={{ background: 'none' }}\r\n              aria-label={showPassword ? 'show-password' : 'hide-password'}\r\n              onClick={() => setShowPassword((prev) => !prev)}\r\n            >\r\n              {showPassword ? <ViewIcon /> : <ViewOffIcon />}\r\n            </Button>\r\n          }\r\n          partProps={{\r\n            input: {\r\n              'aria-label': 'password-input',\r\n              role: 'input',\r\n            },\r\n          }}\r\n        />\r\n      </Stack>\r\n      <Button\r\n        w=\"full\"\r\n        variant=\"primary\"\r\n        isLoading={formState.isSubmitting}\r\n        type=\"submit\"\r\n        my={8}\r\n      >\r\n        {isSignUp ? 'Sign Up' : 'Login'}\r\n      </Button>\r\n      <Center>\r\n        <Text>\r\n          {isSignUp ? 'Already have an account?' : 'No account yet?'}{' '}\r\n          <Text\r\n            as={'a'}\r\n            data-testid={'switch-form-link'}\r\n            _hover={{ textDecoration: 'underline', cursor: 'pointer' }}\r\n            aria-label={isSignUp ? 'login-link-label' : 'signup-link-label'}\r\n            onClick={() => setIsSignUp((prev) => !prev)}\r\n            fontWeight={'bold'}\r\n            role={'link'}\r\n          >\r\n            {isSignUp ? 'Login' : 'Sign up'}\r\n          </Text>\r\n        </Text>\r\n      </Center>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CredentialLoginForm;\r\n","import { Box, Button, Heading, Text } from '@chakra-ui/react';\r\nimport { PinInputField } from '@highoutput/hds-forms';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport React, { ReactNode } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { authenticateSchema, AuthenticateSchemaValues } from './validation';\r\n\r\nexport interface OTPFormProps {\r\n  title?: ReactNode;\r\n  subTitle?: ReactNode;\r\n  numberOfFields?: number;\r\n  buttonText?: string;\r\n  otpType?: 'number' | 'alphanumeric';\r\n  onSubmitOTPValue?(value: AuthenticateSchemaValues): void;\r\n}\r\nconst OTPForm = (props: OTPFormProps) => {\r\n  const {\r\n    subTitle,\r\n    title,\r\n    otpType = 'number',\r\n    numberOfFields = 6,\r\n    buttonText,\r\n    onSubmitOTPValue,\r\n  } = props;\r\n  const buttonRef = React.useRef<HTMLButtonElement>(null);\r\n  const {\r\n    register: registerOtp,\r\n    handleSubmit: handleSubmitOtp,\r\n    formState: formStateOtp,\r\n  } = useForm<AuthenticateSchemaValues>({\r\n    resolver: yupResolver(authenticateSchema),\r\n    context: { numberOfFields: numberOfFields },\r\n    shouldUnregister: true,\r\n    defaultValues: {\r\n      otp: '',\r\n    },\r\n  });\r\n  const onSubmitOTP = async (value: AuthenticateSchemaValues) => {\r\n    if (onSubmitOTPValue) {\r\n      onSubmitOTPValue(value);\r\n    }\r\n  };\r\n  return (\r\n    <Box\r\n      as=\"form\"\r\n      w={350}\r\n      data-testid=\"box.otpform.form\"\r\n      onSubmit={handleSubmitOtp(onSubmitOTP)}\r\n    >\r\n      <Box mb=\"6\">\r\n        {title ? (\r\n          title\r\n        ) : (\r\n          <Heading as=\"h1\" mb={2}>\r\n            Check your inbox\r\n          </Heading>\r\n        )}\r\n\r\n        {subTitle ? (\r\n          subTitle\r\n        ) : (\r\n          <Text>We have sent a 6-digit code to your email </Text>\r\n        )}\r\n      </Box>\r\n\r\n      <PinInputField\r\n        id=\"otp\"\r\n        {...registerOtp('otp')}\r\n        errorMsg={formStateOtp.errors.otp?.message}\r\n        disabled={formStateOtp.isSubmitting}\r\n        numberOfFields={numberOfFields}\r\n        autoFocus\r\n        onComplete={buttonRef.current?.click}\r\n        type={otpType}\r\n      />\r\n      <Button\r\n        variant={'primary'}\r\n        ref={buttonRef}\r\n        type=\"submit\"\r\n        isLoading={formStateOtp.isSubmitting}\r\n        width={'100%'}\r\n        data-testid=\"button.otp.submit\"\r\n        marginTop={5}\r\n      >\r\n        {buttonText ? buttonText : 'Sign In'}\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default OTPForm;\r\n","import { Box, Button } from '@chakra-ui/react';\r\nimport { InputField } from '@highoutput/hds-forms';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport OTPForm, { OTPFormProps } from './OTPForm';\r\nimport {\r\n  AuthenticateSchemaValues,\r\n  generateEmailOTPSchema,\r\n  GenerateEmailOTPSchemaValues,\r\n} from './validation';\r\n\r\nexport interface OTPVerificationProps extends OTPFormProps {\r\n  onSubmitEmailValue?(value: GenerateEmailOTPSchemaValues): void;\r\n  onSubmitOTPValue?(value: AuthenticateSchemaValues): void;\r\n  otpReceived: boolean;\r\n  numberOfFields?: number;\r\n  otpType?: 'number' | 'alphanumeric';\r\n}\r\n\r\nconst OTPVerificationForm = (props: OTPVerificationProps) => {\r\n  const {\r\n    otpReceived,\r\n    onSubmitEmailValue,\r\n    numberOfFields,\r\n    title,\r\n    subTitle,\r\n    onSubmitOTPValue,\r\n  } = props;\r\n\r\n  const { register, handleSubmit, formState } =\r\n    useForm<GenerateEmailOTPSchemaValues>({\r\n      resolver: yupResolver(generateEmailOTPSchema),\r\n      defaultValues: {\r\n        emailAddress: '',\r\n      },\r\n      shouldUnregister: true,\r\n    });\r\n\r\n  const onSubmitEmail = async (value: GenerateEmailOTPSchemaValues) => {\r\n    if (onSubmitEmailValue) {\r\n      onSubmitEmailValue(value);\r\n    }\r\n  };\r\n  const onSubmitOTP = async (value: AuthenticateSchemaValues) => {\r\n    if (onSubmitOTPValue) {\r\n      onSubmitOTPValue(value);\r\n    }\r\n  };\r\n\r\n  const { errors, isSubmitting } = formState;\r\n\r\n  return (\r\n    <Box>\r\n      {!otpReceived ? (\r\n        <Box\r\n          as={'form'}\r\n          data-testid=\"box.emailform.form\"\r\n          w={350}\r\n          onSubmit={handleSubmit(onSubmitEmail)}\r\n        >\r\n          <InputField\r\n            id=\"emailAddress\"\r\n            {...register('emailAddress')}\r\n            errorMsg={errors.emailAddress?.message}\r\n            disabled={isSubmitting}\r\n            placeholder={'Enter your email address'}\r\n            partProps={{\r\n              input: {\r\n                'aria-label': 'email-input',\r\n                role: 'input',\r\n              },\r\n            }}\r\n          />\r\n\r\n          <Button\r\n            variant={'primary'}\r\n            type=\"submit\"\r\n            isLoading={isSubmitting}\r\n            width={'100%'}\r\n            marginTop={'10px'}\r\n            data-testid=\"button.email.submit\"\r\n          >\r\n            Sign In\r\n          </Button>\r\n        </Box>\r\n      ) : (\r\n        <Box data-testid=\"otp.component\">\r\n          <OTPForm\r\n            title={title}\r\n            subTitle={subTitle}\r\n            onSubmitOTPValue={(value) => onSubmitOTP(value)}\r\n            numberOfFields={numberOfFields}\r\n          />\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default OTPVerificationForm;\r\n"],"names":["AuthContext","React","hostname","AuthProvider","children","config","Provider","value","accessTokenId","constants","getAuthState","token","cookies","get","status","logout","callback","remove","postJson","url","postfields","fetch","body","JSON","stringify","method","headers","response","json","parsed","ok","Error","error","message","useAuthService","generateOtp","emailAddress","validateOtp","otp","set","secure","process","expires","sameSite","useAuthState","onauthenticated","onunauthenticated","state","setState","handleState","newState","document","addEventListener","removeEventListener","useProfile","withCredentialFormSchemaEmail","object","shape","email","string","required","password","withCredentialFormSchemaName","name","trim","generateEmailOTPSchema","authenticateSchema","when","numberOfFields","length","CredentialLoginForm","props","signUpTitle","loginTitle","variant","onSubmit","nameLabel","useState","showPassword","setShowPassword","isSignUp","setIsSignUp","useForm","resolver","yupResolver","shouldUnregister","register","handleSubmit","formState","onSubmitForm","values","Box","as","maxW","Center","m","p","Text","size","my","Stack","spacing","InputField","id","label","charAt","toUpperCase","slice","placeholder","toLowerCase","errorMsg","errors","disabled","isSubmitting","partProps","input","role","type","rightIcon","Button","background","_hover","_active","onClick","prev","ViewIcon","ViewOffIcon","w","isLoading","textDecoration","cursor","fontWeight","OTPForm","subTitle","title","otpType","buttonText","onSubmitOTPValue","buttonRef","useRef","context","defaultValues","registerOtp","handleSubmitOtp","formStateOtp","onSubmitOTP","mb","Heading","PinInputField","autoFocus","onComplete","current","click","ref","width","marginTop","OTPVerificationForm","otpReceived","onSubmitEmailValue","onSubmitEmail"],"mappings":"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"}