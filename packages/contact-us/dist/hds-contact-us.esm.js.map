{"version":3,"file":"hds-contact-us.esm.js","sources":["../src/components/http.utils.ts","../src/components/useSupport.tsx","../src/components/validation.ts","../src/components/ContactForm.tsx","../src/components/ContactCard.tsx","../src/components/ContactPage.tsx"],"sourcesContent":["type Dict = Record<string, unknown>;\n\ntype PostJson = <T = unknown>(url: string, postfields: Dict) => Promise<T>;\n\nexport const postJson: PostJson = async (u, d) => {\n  const response = await fetch(u, {\n    body: JSON.stringify(d),\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n\n  const parsed = await response.json();\n\n  if (!response.ok) throw new Error(parsed.error.message);\n\n  return parsed;\n};\n","import { useState } from 'react';\nimport { postJson } from './http.utils';\nimport { ContactFormInputProps } from './validation';\n\nconst useSupport = () => {\n  const [hasError, setHasError] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [isSuccess, setSuccess] = useState(false);\n\n  const postSupport = async (url: string, data: ContactFormInputProps) => {\n    setHasError(false);\n    setSuccess(false);\n    setLoading(true);\n\n    try {\n      const response = await postJson<{ ok: true }>(url, { ...data });\n\n      if (response) {\n        setSuccess(true);\n      }\n    } catch (error) {\n      setHasError(true);\n    }\n\n    setLoading(false);\n  };\n\n  return { postSupport, isLoading, hasError, isSuccess };\n};\n\nexport default useSupport;\n","import { InferType, object, SchemaOf, string } from 'yup';\n\nexport interface ContactFormInputProps {\n  emailAddress: string;\n  message: string;\n  details: { name: string };\n}\n\nexport const withContactFormSchema: SchemaOf<ContactFormInputProps> = object().shape(\n  {\n    emailAddress: string()\n      .email('Please enter a valid email address.')\n      .required('Email is required.'),\n    message: string().required('Description is required.'),\n    details: object().shape({ name: string().required('Name is required.') }),\n  }\n);\n\nexport type withContactFormSchemaValues = InferType<\n  typeof withContactFormSchema\n>;\n","import {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  Box,\n  Button,\n  Stack,\n} from '@chakra-ui/react';\nimport { InputField, TextAreaField } from '@highoutput/hds-forms';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport React, { FC } from 'react';\nimport { useForm } from 'react-hook-form';\nimport useSupport from './useSupport';\nimport {\n  ContactFormInputProps,\n  withContactFormSchema,\n  withContactFormSchemaValues,\n} from './validation';\n\n// type WithoutChildren<T> = Omit<T, 'children'>;\n\nexport interface ContactFormProps {\n  onSubmit?(values: ContactFormInputProps): void;\n  url?: string;\n  // partProps?: Partial<{\n  //   input?: WithoutChildren<InputFieldProps>;\n  //   textarea?: WithoutChildren<TextAreaFieldProps>;\n  //   button?: WithoutChildren<ButtonProps>;\n  // }>;\n}\n\nconst ContactForm: FC<ContactFormProps> = (props) => {\n  const { onSubmit, url } = props;\n  const { postSupport, hasError, isSuccess, isLoading } = useSupport();\n  const { register, handleSubmit, formState, reset } =\n    useForm<withContactFormSchemaValues>({\n      resolver: yupResolver(withContactFormSchema),\n      defaultValues: {\n        emailAddress: '',\n        message: '',\n        details: {\n          name: '',\n        },\n      },\n      shouldUnregister: true,\n    });\n\n  const onSubmitForm = async (values: withContactFormSchemaValues) => {\n    if (url) {\n      await postSupport(url, values);\n\n      reset({\n        emailAddress: '',\n        message: '',\n        details: {\n          name: '',\n        },\n      });\n    }\n\n    if (onSubmit) onSubmit(values);\n  };\n\n  const { isSubmitting, errors } = formState;\n\n  return (\n    <Box maxW={512} data-testid=\"box.contactform.container\">\n      <Box\n        as=\"form\"\n        onSubmitCapture={handleSubmit(onSubmitForm)}\n        data-testid=\"box.contactform.form\"\n      >\n        <Stack spacing={4}>\n          <InputField\n            // {...partProps?.input}\n            {...register('details.name')}\n            id=\"name\"\n            label=\"Name\"\n            placeholder=\"Input your name\"\n            errorMsg={errors.details?.name?.message}\n            disabled={isSubmitting}\n          />\n          <InputField\n            // {...partProps?.input}\n            {...register('emailAddress')}\n            id=\"emailAddress\"\n            label=\"Email\"\n            placeholder=\"Input your email address\"\n            errorMsg={errors.emailAddress?.message}\n            disabled={isSubmitting}\n            data-testid=\"input.contactform.email\"\n          />\n          <TextAreaField\n            // {...partProps?.textarea}\n            {...register('message')}\n            id=\"message\"\n            label=\"Desciption of concern\"\n            placeholder=\"Enter description\"\n            errorMsg={errors.message?.message}\n            disabled={isSubmitting}\n            data-testid=\"textarea.contactform.description\"\n          />\n          <Button\n            w=\"full\"\n            variant=\"primary\"\n            isLoading={isSubmitting || isLoading}\n            // {...partProps?.button}\n            type=\"submit\"\n            data-testid=\"button.contactform.submit\"\n          >\n            Send\n          </Button>\n\n          {hasError && (\n            <Alert status=\"error\">\n              <AlertIcon />\n              <AlertDescription>Ops, Something went wrong.</AlertDescription>\n            </Alert>\n          )}\n\n          {isSuccess && (\n            <Alert status=\"success\">\n              <AlertIcon />\n              <AlertDescription>Message successfully sent!</AlertDescription>\n            </Alert>\n          )}\n        </Stack>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ContactForm;\n","import { Box, BoxProps, Center, Text } from '@chakra-ui/react';\nimport React, { FC, ReactNode } from 'react';\nimport ContactForm from './ContactForm';\n\nexport interface ContactCardProps extends Pick<BoxProps, 'pos' | 'top' | 'w'> {\n  children?: ReactNode;\n  title?: string;\n  url?: string;\n}\n\nconst ContactCard: FC<ContactCardProps> = (props) => {\n  const { children, title = 'Drop your message', url } = props;\n  return (\n    <Box\n      w={512}\n      bg=\"white\"\n      borderRadius=\"8px\"\n      padding=\"56px\"\n      boxShadow=\"0px 10px 15px -3px rgba(0, 0, 0, 0.1), 0px 4px 6px -2px rgba(0, 0, 0, 0.05)\"\n      {...props}\n      data-testid=\"box.contactcard.container\"\n    >\n      <Center mb={8} data-testid=\"center.contactcard.titleposition\">\n        <Text size=\"header-4\" data-testid=\"text.contactcard.title\">\n          {title}\n        </Text>\n      </Center>\n      {children ? (\n        children\n      ) : (\n        <ContactForm\n          // {...partProps?.contactForm}\n          url={url}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport default ContactCard;\n","import { Box, Center, Text } from '@chakra-ui/react';\nimport { HovIcon } from '@highoutput/hds-icons';\nimport React, { FC, ReactNode } from 'react';\nimport ContactCard from './ContactCard';\n\nexport interface ContagePageProps {\n  title?: string;\n  secondaryTitle?: string;\n  iconNode?: ReactNode;\n  url?: string;\n}\n\nconst ContactPage: FC<ContagePageProps> = (props) => {\n  const {\n    title = 'Contact Us',\n    secondaryTitle = `Tell us what you need and we'll help you out.`,\n    iconNode,\n    url,\n  } = props;\n  return (\n    <Box pos=\"relative\" w=\"100%\" data-testid=\"box.contactpage.container\">\n      <Box\n        minW={'600px'}\n        bg=\"#000\"\n        w=\"100%\"\n        h=\"400px\"\n        // {...props}\n        data-testid=\"box.contactpage.banner\"\n      >\n        <Center pt={20} pb={8} data-testid=\"center.contactpage.iconposition\">\n          {iconNode ? (\n            iconNode\n          ) : (\n            <HovIcon color=\"white\" data-testid=\"icon.contactpage.hovicon\" />\n          )}\n        </Center>\n\n        <Center data-testid=\"center.contactpage.titlepostion\">\n          <Text\n            size=\"header-3\"\n            color=\"white\"\n            // {...partProps?.title}\n            data-testid=\"text.contactpage.title\"\n          >\n            {title}\n          </Text>\n        </Center>\n\n        <Center data-testid=\"center.contactpage.secondarytitleposition\">\n          <Text\n            color=\"gray.200\"\n            // {...partProps?.secondaryTitle}\n            data-testid=\"text.contactpage.secondarytitle\"\n          >\n            {secondaryTitle}\n          </Text>\n        </Center>\n      </Box>\n      <Center\n        minW={'600px'}\n        data-testid=\"center.contactpage.secondarytitleposition\"\n      >\n        <ContactCard\n          pos=\"absolute\"\n          top=\"250px\"\n          w=\"512px\"\n          url={url}\n          // {...partProps?.contactCard}\n        />\n      </Center>\n    </Box>\n  );\n};\n\nexport default ContactPage;\n"],"names":["postJson","u","d","fetch","body","JSON","stringify","method","headers","response","json","parsed","ok","Error","error","message","useSupport","useState","hasError","setHasError","isLoading","setLoading","isSuccess","setSuccess","postSupport","url","data","withContactFormSchema","object","shape","emailAddress","string","email","required","details","name","ContactForm","props","onSubmit","useForm","resolver","yupResolver","defaultValues","shouldUnregister","register","handleSubmit","formState","reset","onSubmitForm","values","isSubmitting","errors","React","Box","maxW","as","onSubmitCapture","Stack","spacing","InputField","id","label","placeholder","errorMsg","disabled","TextAreaField","Button","w","variant","type","Alert","status","AlertIcon","AlertDescription","ContactCard","children","title","bg","borderRadius","padding","boxShadow","Center","mb","Text","size","ContactPage","secondaryTitle","iconNode","pos","minW","h","pt","pb","HovIcon","color","top"],"mappings":"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"}