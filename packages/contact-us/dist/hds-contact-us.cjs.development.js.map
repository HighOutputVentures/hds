{"version":3,"file":"hds-contact-us.cjs.development.js","sources":["../src/http.utils.ts","../src/useSupport.tsx","../src/validation.ts","../src/ContactForm.tsx","../src/ContactCard.tsx","../src/ContactPage.tsx"],"sourcesContent":["type Dict = Record<string, unknown>;\r\n\r\ntype PostJson = <T = unknown>(url: string, postfields: Dict) => Promise<T>;\r\n\r\nexport const postJson: PostJson = async (u, d) => {\r\n  const response = await fetch(u, {\r\n    body: JSON.stringify(d),\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n\r\n  const parsed = await response.json();\r\n\r\n  if (!response.ok) throw new Error(parsed.error.message);\r\n\r\n  return parsed;\r\n};\r\n","import { useState } from 'react';\r\nimport { postJson } from './http.utils';\r\nimport { ContactFormInputProps } from './validation';\r\n\r\nconst useSupport = () => {\r\n  const [hasError, setHasError] = useState(false);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [isSuccess, setSuccess] = useState(false);\r\n\r\n  const postSupport = async (url: string, data: ContactFormInputProps) => {\r\n    setHasError(false);\r\n    setSuccess(false);\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await postJson<{ ok: true }>(url, { ...data });\r\n\r\n      if (response) {\r\n        setSuccess(true);\r\n      }\r\n    } catch (error) {\r\n      setHasError(true);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return { postSupport, isLoading, hasError, isSuccess };\r\n};\r\n\r\nexport default useSupport;\r\n","import { InferType, object, SchemaOf, string } from 'yup';\r\n\r\nexport interface ContactFormInputProps {\r\n  emailAddress: string;\r\n  message: string;\r\n  details: { name: string };\r\n}\r\n\r\nexport const withContactFormSchema: SchemaOf<ContactFormInputProps> = object().shape(\r\n  {\r\n    emailAddress: string()\r\n      .email('Please enter a valid email address.')\r\n      .required('Email is required.'),\r\n    message: string().required('Description is required.'),\r\n    details: object().shape({ name: string().required('Name is required.') }),\r\n  }\r\n);\r\n\r\nexport type withContactFormSchemaValues = InferType<\r\n  typeof withContactFormSchema\r\n>;\r\n","import {\r\n  Alert,\r\n  AlertDescription,\r\n  AlertIcon,\r\n  Box,\r\n  Button,\r\n  Stack,\r\n} from '@chakra-ui/react';\r\nimport { InputField, TextAreaField } from '@highoutput/hds-forms';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport React, { FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport useSupport from './useSupport';\r\nimport {\r\n  ContactFormInputProps,\r\n  withContactFormSchema,\r\n  withContactFormSchemaValues,\r\n} from './validation';\r\n\r\n// type WithoutChildren<T> = Omit<T, 'children'>;\r\n\r\nexport interface ContactFormProps {\r\n  onSubmit?(values: ContactFormInputProps): void;\r\n  url?: string;\r\n  // partProps?: Partial<{\r\n  //   input?: WithoutChildren<InputFieldProps>;\r\n  //   textarea?: WithoutChildren<TextAreaFieldProps>;\r\n  //   button?: WithoutChildren<ButtonProps>;\r\n  // }>;\r\n}\r\n\r\nconst ContactForm: FC<ContactFormProps> = (props) => {\r\n  const { onSubmit, url } = props;\r\n  const { postSupport, hasError, isSuccess, isLoading } = useSupport();\r\n  const { register, handleSubmit, formState, reset } =\r\n    useForm<withContactFormSchemaValues>({\r\n      resolver: yupResolver(withContactFormSchema),\r\n      defaultValues: {\r\n        emailAddress: '',\r\n        message: '',\r\n        details: {\r\n          name: '',\r\n        },\r\n      },\r\n      shouldUnregister: true,\r\n    });\r\n\r\n  const onSubmitForm = async (values: withContactFormSchemaValues) => {\r\n    if (url) {\r\n      await postSupport(url, values);\r\n\r\n      reset({\r\n        emailAddress: '',\r\n        message: '',\r\n        details: {\r\n          name: '',\r\n        },\r\n      });\r\n    }\r\n\r\n    if (onSubmit) onSubmit(values);\r\n  };\r\n\r\n  const { isSubmitting, errors } = formState;\r\n\r\n  return (\r\n    <Box maxW={512} data-testid=\"box.contactform.container\">\r\n      <Box\r\n        as=\"form\"\r\n        onSubmitCapture={handleSubmit(onSubmitForm)}\r\n        data-testid=\"box.contactform.form\"\r\n      >\r\n        <Stack spacing={4}>\r\n          <InputField\r\n            // {...partProps?.input}\r\n            {...register('details.name')}\r\n            id=\"name\"\r\n            label=\"Name\"\r\n            placeholder=\"Input your name\"\r\n            errorMsg={errors.details?.name?.message}\r\n            disabled={isSubmitting}\r\n          />\r\n          <InputField\r\n            // {...partProps?.input}\r\n            {...register('emailAddress')}\r\n            id=\"emailAddress\"\r\n            label=\"Email\"\r\n            placeholder=\"Input your email address\"\r\n            errorMsg={errors.emailAddress?.message}\r\n            disabled={isSubmitting}\r\n            data-testid=\"input.contactform.email\"\r\n          />\r\n          <TextAreaField\r\n            // {...partProps?.textarea}\r\n            {...register('message')}\r\n            id=\"message\"\r\n            label=\"Desciption of concern\"\r\n            placeholder=\"Enter description\"\r\n            errorMsg={errors.message?.message}\r\n            disabled={isSubmitting}\r\n            data-testid=\"textarea.contactform.description\"\r\n          />\r\n          <Button\r\n            w=\"full\"\r\n            variant=\"primary\"\r\n            isLoading={isSubmitting || isLoading}\r\n            // {...partProps?.button}\r\n            type=\"submit\"\r\n            data-testid=\"button.contactform.submit\"\r\n          >\r\n            Send\r\n          </Button>\r\n\r\n          {hasError && (\r\n            <Alert status=\"error\">\r\n              <AlertIcon />\r\n              <AlertDescription>Ops, Something went wrong.</AlertDescription>\r\n            </Alert>\r\n          )}\r\n\r\n          {isSuccess && (\r\n            <Alert status=\"success\">\r\n              <AlertIcon />\r\n              <AlertDescription>Message successfully sent!</AlertDescription>\r\n            </Alert>\r\n          )}\r\n        </Stack>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import { Box, BoxProps, Center, Text } from '@chakra-ui/react';\r\nimport React, { FC, ReactNode } from 'react';\r\nimport ContactForm from './ContactForm';\r\n\r\nexport interface ContactCardProps extends Pick<BoxProps, 'pos' | 'top' | 'w'> {\r\n  children?: ReactNode;\r\n  title?: string;\r\n  url?: string;\r\n}\r\n\r\nconst ContactCard: FC<ContactCardProps> = (props) => {\r\n  const { children, title = 'Drop your message', url } = props;\r\n  return (\r\n    <Box\r\n      w={512}\r\n      bg=\"white\"\r\n      borderRadius=\"8px\"\r\n      padding=\"56px\"\r\n      boxShadow=\"0px 10px 15px -3px rgba(0, 0, 0, 0.1), 0px 4px 6px -2px rgba(0, 0, 0, 0.05)\"\r\n      {...props}\r\n      data-testid=\"box.contactcard.container\"\r\n    >\r\n      <Center mb={8} data-testid=\"center.contactcard.titleposition\">\r\n        <Text size=\"header-4\" data-testid=\"text.contactcard.title\">\r\n          {title}\r\n        </Text>\r\n      </Center>\r\n      {children ? (\r\n        children\r\n      ) : (\r\n        <ContactForm\r\n          // {...partProps?.contactForm}\r\n          url={url}\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ContactCard;\r\n","import { Box, Center, Text } from '@chakra-ui/react';\r\nimport { HovIcon } from '@highoutput/hds-icons';\r\nimport React, { FC, ReactNode } from 'react';\r\nimport ContactCard from './ContactCard';\r\n\r\nexport interface ContagePageProps {\r\n  title?: string;\r\n  secondaryTitle?: string;\r\n  iconNode?: ReactNode;\r\n  url?: string;\r\n}\r\n\r\nconst ContactPage: FC<ContagePageProps> = (props) => {\r\n  const {\r\n    title = 'Contact Us',\r\n    secondaryTitle = `Tell us what you need and we'll help you out.`,\r\n    iconNode,\r\n    url,\r\n  } = props;\r\n  return (\r\n    <Box pos=\"relative\" w=\"100%\" data-testid=\"box.contactpage.container\">\r\n      <Box\r\n        minW={'600px'}\r\n        bg=\"#000\"\r\n        w=\"100%\"\r\n        h=\"400px\"\r\n        // {...props}\r\n        data-testid=\"box.contactpage.banner\"\r\n      >\r\n        <Center pt={20} pb={8} data-testid=\"center.contactpage.iconposition\">\r\n          {iconNode ? (\r\n            iconNode\r\n          ) : (\r\n            <HovIcon color=\"white\" data-testid=\"icon.contactpage.hovicon\" />\r\n          )}\r\n        </Center>\r\n\r\n        <Center data-testid=\"center.contactpage.titlepostion\">\r\n          <Text\r\n            size=\"header-3\"\r\n            color=\"white\"\r\n            // {...partProps?.title}\r\n            data-testid=\"text.contactpage.title\"\r\n          >\r\n            {title}\r\n          </Text>\r\n        </Center>\r\n\r\n        <Center data-testid=\"center.contactpage.secondarytitleposition\">\r\n          <Text\r\n            color=\"gray.200\"\r\n            // {...partProps?.secondaryTitle}\r\n            data-testid=\"text.contactpage.secondarytitle\"\r\n          >\r\n            {secondaryTitle}\r\n          </Text>\r\n        </Center>\r\n      </Box>\r\n      <Center\r\n        minW={'600px'}\r\n        data-testid=\"center.contactpage.secondarytitleposition\"\r\n      >\r\n        <ContactCard\r\n          pos=\"absolute\"\r\n          top=\"250px\"\r\n          w=\"512px\"\r\n          url={url}\r\n          // {...partProps?.contactCard}\r\n        />\r\n      </Center>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ContactPage;\r\n"],"names":["postJson","u","d","fetch","body","JSON","stringify","method","headers","response","json","parsed","ok","Error","error","message","useSupport","useState","hasError","setHasError","isLoading","setLoading","isSuccess","setSuccess","postSupport","url","data","withContactFormSchema","object","shape","emailAddress","string","email","required","details","name","ContactForm","props","onSubmit","useForm","resolver","yupResolver","defaultValues","shouldUnregister","register","handleSubmit","formState","reset","onSubmitForm","values","isSubmitting","errors","React","Box","maxW","as","onSubmitCapture","Stack","spacing","InputField","id","label","placeholder","errorMsg","disabled","TextAreaField","Button","w","variant","type","Alert","status","AlertIcon","AlertDescription","ContactCard","children","title","bg","borderRadius","padding","boxShadow","Center","mb","Text","size","ContactPage","secondaryTitle","iconNode","pos","minW","h","pt","pb","HovIcon","color","top"],"mappings":"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"}