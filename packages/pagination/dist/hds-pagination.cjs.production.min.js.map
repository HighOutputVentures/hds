{"version":3,"file":"hds-pagination.cjs.production.min.js","sources":["../src/components/Pagination.tsx"],"sourcesContent":["import {\r\n  ButtonProps,\r\n  Flex,\r\n  FlexProps,\r\n  HStack,\r\n  IconButton,\r\n  IconProps,\r\n  Select,\r\n  SelectProps,\r\n  StackProps,\r\n  Text,\r\n  TextProps,\r\n  ThemingProps,\r\n  useMultiStyleConfig,\r\n} from '@chakra-ui/react';\r\nimport React, { FC, useCallback, useId } from 'react';\r\nimport { ChevronLeftIcon, ChevronRightIcon } from '@highoutput/hds-icons';\r\n\r\ntype WithoutChildren<T> = Omit<T, 'children'>;\r\n\r\nexport interface PaginationProps extends ThemingProps {\r\n  page: number;\r\n  size: number;\r\n  total: number;\r\n  onSizeChange?: (newSize: number) => void;\r\n  onPageChange?: (newPage: number) => void;\r\n  options: {\r\n    sizes: number[];\r\n  };\r\n  /**\r\n   *\r\n   * _Not yet implemented_\r\n   *\r\n   */\r\n  loading?: boolean;\r\n  partProps?: Partial<{\r\n    container?: WithoutChildren<FlexProps>;\r\n    dropdown?: WithoutChildren<SelectProps>;\r\n    dropdownLabel?: WithoutChildren<TextProps>;\r\n    dropdownContainer?: WithoutChildren<StackProps>;\r\n    caption?: WithoutChildren<TextProps>;\r\n    captionAndControlsContainer?: WithoutChildren<StackProps>;\r\n    controls?: WithoutChildren<ButtonProps>;\r\n    controlIcons?: WithoutChildren<IconProps>;\r\n    controlsContainer?: WithoutChildren<StackProps>;\r\n  }>;\r\n}\r\n\r\nconst Pagination: FC<PaginationProps> = ({\r\n  page,\r\n  size,\r\n  total,\r\n  onPageChange,\r\n  onSizeChange,\r\n  options,\r\n  partProps,\r\n  variant,\r\n}) => {\r\n  const styles = useMultiStyleConfig('Pagination', { variant });\r\n  const id = useId();\r\n\r\n  const hasPrev = page > 1;\r\n  const hasNext = page * size < total;\r\n\r\n  const handleSizeChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    if (onSizeChange) onSizeChange(parseInt(e.target.value));\r\n  };\r\n\r\n  const handlePageChange = (type: 'increment' | 'decrement') => {\r\n    const newPage = type === 'increment' ? page + 1 : page - 1;\r\n\r\n    return () => (onPageChange ? onPageChange(newPage) : newPage);\r\n  };\r\n\r\n  const indexStart = (page - 1) * size + 1;\r\n  const indexStop = page * size;\r\n  const remainder = total % size;\r\n\r\n  const getPageInfo = useCallback(() => {\r\n    let pageInfo = '';\r\n\r\n    pageInfo += 'Page ';\r\n    pageInfo += indexStart;\r\n    pageInfo += '-';\r\n    pageInfo += indexStop > total ? indexStart - 1 + remainder : indexStop;\r\n    pageInfo += ' of ';\r\n    pageInfo += total;\r\n\r\n    return pageInfo;\r\n  }, [indexStart, indexStop, total, remainder]);\r\n\r\n  return (\r\n    <Flex\r\n      id={id}\r\n      alignItems=\"center\"\r\n      justifyContent=\"space-between\"\r\n      sx={styles.container}\r\n      {...partProps?.container}\r\n    >\r\n      <HStack spacing={2} {...partProps?.dropdownContainer}>\r\n        <Text\r\n          as=\"span\"\r\n          whiteSpace=\"nowrap\"\r\n          sx={styles.dropdownLabel}\r\n          {...partProps?.dropdownLabel}\r\n        >\r\n          Show rows per page\r\n        </Text>\r\n\r\n        <Select\r\n          data-testid={`${id}-pagination.dropdown`}\r\n          onChange={handleSizeChange}\r\n          value={size}\r\n          sx={styles.dropdown}\r\n          {...partProps?.dropdown}\r\n        >\r\n          {options.sizes.map((size, index) => (\r\n            <option\r\n              value={size}\r\n              key={id + size + index}\r\n              data-testid={`${id}-${size}-${index}`}\r\n            >\r\n              {size}\r\n            </option>\r\n          ))}\r\n        </Select>\r\n      </HStack>\r\n\r\n      <HStack spacing={4} {...partProps?.captionAndControlsContainer}>\r\n        <Text as=\"span\" sx={styles.caption} {...partProps?.caption}>\r\n          {getPageInfo()}\r\n        </Text>\r\n\r\n        <HStack {...partProps?.controlsContainer}>\r\n          <IconButton\r\n            aria-label=\"\"\r\n            data-testid={`${id}-pagination.controls.prev`}\r\n            icon={\r\n              <ChevronLeftIcon\r\n                color=\"white\"\r\n                sx={styles.controlIcons}\r\n                {...partProps?.controlIcons}\r\n              />\r\n            }\r\n            onClick={handlePageChange('decrement')}\r\n            paddingTop=\"10px\"\r\n            paddingLeft=\"12px\"\r\n            disabled={!hasPrev}\r\n            sx={styles.iconButton}\r\n            {...partProps?.controls}\r\n          />\r\n\r\n          <IconButton\r\n            aria-label=\"\"\r\n            data-testid={`${id}-pagination.controls.next`}\r\n            icon={\r\n              <ChevronRightIcon\r\n                color=\"white\"\r\n                sx={styles.controlIcons}\r\n                {...partProps?.controlIcons}\r\n              />\r\n            }\r\n            onClick={handlePageChange('increment')}\r\n            disabled={!hasNext}\r\n            paddingTop=\"10px\"\r\n            paddingLeft=\"12px\"\r\n            sx={styles.iconButton}\r\n            {...partProps?.controls}\r\n          />\r\n        </HStack>\r\n      </HStack>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n"],"names":["page","size","total","onPageChange","onSizeChange","options","partProps","styles","useMultiStyleConfig","variant","id","useId","hasPrev","hasNext","handlePageChange","type","newPage","indexStart","indexStop","remainder","getPageInfo","useCallback","pageInfo","React","Flex","alignItems","justifyContent","sx","container","HStack","spacing","dropdownContainer","Text","as","whiteSpace","dropdownLabel","Select","onChange","e","parseInt","target","value","dropdown","sizes","map","index","key","captionAndControlsContainer","caption","controlsContainer","IconButton","icon","ChevronLeftIcon","color","controlIcons","onClick","paddingTop","paddingLeft","disabled","iconButton","controls","ChevronRightIcon"],"mappings":"wOAgDwC,gBACtCA,IAAAA,KACAC,IAAAA,KACAC,IAAAA,MACAC,IAAAA,aACAC,IAAAA,aACAC,IAAAA,QACAC,IAAAA,UAGMC,EAASC,sBAAoB,aAAc,CAAEC,UAFnDA,UAGMC,EAAKC,UAELC,EAAUZ,EAAO,EACjBa,EAAUb,EAAOC,EAAOC,EAMxBY,EAAmB,SAACC,GACxB,IAAMC,EAAmB,cAATD,EAAuBf,EAAO,EAAIA,EAAO,EAEzD,OAAO,WAAA,OAAOG,EAAeA,EAAaa,GAAWA,IAGjDC,GAAcjB,EAAO,GAAKC,EAAO,EACjCiB,EAAYlB,EAAOC,EACnBkB,EAAYjB,EAAQD,EAEpBmB,EAAcC,eAAY,WAC9B,IAAIC,EAAW,GASf,OAPAA,GAAY,QACZA,GAAYL,EACZK,GAAY,IACZA,GAAYJ,EAAYhB,EAAQe,EAAa,EAAIE,EAAYD,GAC7DI,GAAY,QACApB,IAGX,CAACe,EAAYC,EAAWhB,EAAOiB,IAElC,OACEI,gBAACC,sBACCd,GAAIA,EACJe,WAAW,SACXC,eAAe,gBACfC,GAAIpB,EAAOqB,iBACPtB,SAAAA,EAAWsB,WAEfL,gBAACM,wBAAOC,QAAS,SAAOxB,SAAAA,EAAWyB,mBACjCR,gBAACS,sBACCC,GAAG,OACHC,WAAW,SACXP,GAAIpB,EAAO4B,qBACP7B,SAAAA,EAAW6B,qCAKjBZ,gBAACa,sCACiB1B,yBAChB2B,SA/CiB,SAACC,GACpBlC,GAAcA,EAAamC,SAASD,EAAEE,OAAOC,SA+C3CA,MAAOxC,EACP0B,GAAIpB,EAAOmC,gBACPpC,SAAAA,EAAWoC,UAEdrC,EAAQsC,MAAMC,KAAI,SAAC3C,EAAM4C,GAAK,OAC7BtB,0BACEkB,MAAOxC,EACP6C,IAAKpC,EAAKT,EAAO4C,gBACDnC,MAAMT,MAAQ4C,GAE7B5C,QAMTsB,gBAACM,wBAAOC,QAAS,SAAOxB,SAAAA,EAAWyC,6BACjCxB,gBAACS,sBAAKC,GAAG,OAAON,GAAIpB,EAAOyC,eAAa1C,SAAAA,EAAW0C,SAChD5B,KAGHG,gBAACM,gCAAWvB,SAAAA,EAAW2C,mBACrB1B,gBAAC2B,yCACY,iBACKxC,8BAChByC,KACE5B,gBAAC6B,iCACCC,MAAM,QACN1B,GAAIpB,EAAO+C,oBACPhD,SAAAA,EAAWgD,eAGnBC,QAASzC,EAAiB,aAC1B0C,WAAW,OACXC,YAAY,OACZC,UAAW9C,EACXe,GAAIpB,EAAOoD,kBACPrD,SAAAA,EAAWsD,WAGjBrC,gBAAC2B,yCACY,iBACKxC,8BAChByC,KACE5B,gBAACsC,kCACCR,MAAM,QACN1B,GAAIpB,EAAO+C,oBACPhD,SAAAA,EAAWgD,eAGnBC,QAASzC,EAAiB,aAC1B4C,UAAW7C,EACX2C,WAAW,OACXC,YAAY,OACZ9B,GAAIpB,EAAOoD,kBACPrD,SAAAA,EAAWsD"}