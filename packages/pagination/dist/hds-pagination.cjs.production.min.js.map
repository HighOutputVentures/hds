{"version":3,"file":"hds-pagination.cjs.production.min.js","sources":["../src/components/Pagination.tsx"],"sourcesContent":["import {\n  ButtonProps,\n  Flex,\n  FlexProps,\n  HStack,\n  IconButton,\n  IconProps,\n  Select,\n  SelectProps,\n  StackProps,\n  Text,\n  TextProps,\n  ThemingProps,\n  useMultiStyleConfig,\n} from '@chakra-ui/react';\nimport React, { FC, useCallback, useId } from 'react';\nimport { ChevronLeftIcon, ChevronRightIcon } from '@highoutput/hds-icons';\n\ntype WithoutChildren<T> = Omit<T, 'children'>;\n\nexport interface PaginationProps extends ThemingProps {\n  page: number;\n  size: number;\n  total: number;\n  onSizeChange?: (newSize: number) => void;\n  onPageChange?: (newPage: number) => void;\n  options: {\n    sizes: number[];\n  };\n  /**\n   *\n   * _Not yet implemented_\n   *\n   */\n  loading?: boolean;\n  partProps?: Partial<{\n    container?: WithoutChildren<FlexProps>;\n    dropdown?: WithoutChildren<SelectProps>;\n    dropdownLabel?: WithoutChildren<TextProps>;\n    dropdownContainer?: WithoutChildren<StackProps>;\n    caption?: WithoutChildren<TextProps>;\n    captionAndControlsContainer?: WithoutChildren<StackProps>;\n    controls?: WithoutChildren<ButtonProps>;\n    controlIcons?: WithoutChildren<IconProps>;\n    controlsContainer?: WithoutChildren<StackProps>;\n  }>;\n}\n\nconst Pagination: FC<PaginationProps> = ({\n  page,\n  size,\n  total,\n  onPageChange,\n  onSizeChange,\n  options,\n  partProps,\n  variant,\n}) => {\n  const styles = useMultiStyleConfig('Pagination', { variant });\n  const id = useId();\n\n  const hasPrev = page > 1;\n  const hasNext = page * size < total;\n\n  const handleSizeChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    if (onSizeChange) onSizeChange(parseInt(e.target.value));\n  };\n\n  const handlePageChange = (type: 'increment' | 'decrement') => {\n    const newPage = type === 'increment' ? page + 1 : page - 1;\n\n    return () => (onPageChange ? onPageChange(newPage) : newPage);\n  };\n\n  const indexStart = (page - 1) * size + 1;\n  const indexStop = page * size;\n  const remainder = total % size;\n\n  const getPageInfo = useCallback(() => {\n    let pageInfo = '';\n\n    pageInfo += 'Page ';\n    pageInfo += indexStart;\n    pageInfo += '-';\n    pageInfo += indexStop > total ? indexStart - 1 + remainder : indexStop;\n    pageInfo += ' of ';\n    pageInfo += total;\n\n    return pageInfo;\n  }, [indexStart, indexStop, total, remainder]);\n\n  return (\n    <Flex\n      id={id}\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      sx={styles.container}\n      {...partProps?.container}\n    >\n      <HStack spacing={2} {...partProps?.dropdownContainer}>\n        <Text\n          as=\"span\"\n          whiteSpace=\"nowrap\"\n          sx={styles.dropdownLabel}\n          {...partProps?.dropdownLabel}\n        >\n          Show rows per page\n        </Text>\n\n        <Select\n          data-testid={`${id}-pagination.dropdown`}\n          onChange={handleSizeChange}\n          value={size}\n          sx={styles.dropdown}\n          {...partProps?.dropdown}\n        >\n          {options.sizes.map((size, index) => (\n            <option\n              value={size}\n              key={id + size + index}\n              data-testid={`${id}-${size}-${index}`}\n            >\n              {size}\n            </option>\n          ))}\n        </Select>\n      </HStack>\n\n      <HStack spacing={4} {...partProps?.captionAndControlsContainer}>\n        <Text as=\"span\" sx={styles.caption} {...partProps?.caption}>\n          {getPageInfo()}\n        </Text>\n\n        <HStack {...partProps?.controlsContainer}>\n          <IconButton\n            aria-label=\"\"\n            data-testid={`${id}-pagination.controls.prev`}\n            icon={\n              <ChevronLeftIcon\n                color=\"white\"\n                sx={styles.controlIcons}\n                {...partProps?.controlIcons}\n              />\n            }\n            onClick={handlePageChange('decrement')}\n            paddingTop=\"10px\"\n            paddingLeft=\"12px\"\n            disabled={!hasPrev}\n            sx={styles.iconButton}\n            {...partProps?.controls}\n          />\n\n          <IconButton\n            aria-label=\"\"\n            data-testid={`${id}-pagination.controls.next`}\n            icon={\n              <ChevronRightIcon\n                color=\"white\"\n                sx={styles.controlIcons}\n                {...partProps?.controlIcons}\n              />\n            }\n            onClick={handlePageChange('increment')}\n            disabled={!hasNext}\n            paddingTop=\"10px\"\n            paddingLeft=\"12px\"\n            sx={styles.iconButton}\n            {...partProps?.controls}\n          />\n        </HStack>\n      </HStack>\n    </Flex>\n  );\n};\n\nexport default Pagination;\n"],"names":["page","size","total","onPageChange","onSizeChange","options","partProps","styles","useMultiStyleConfig","variant","id","useId","hasPrev","hasNext","handlePageChange","type","newPage","indexStart","indexStop","remainder","getPageInfo","useCallback","pageInfo","React","Flex","alignItems","justifyContent","sx","container","HStack","spacing","dropdownContainer","Text","as","whiteSpace","dropdownLabel","Select","onChange","e","parseInt","target","value","dropdown","sizes","map","index","key","captionAndControlsContainer","caption","controlsContainer","IconButton","icon","ChevronLeftIcon","color","controlIcons","onClick","paddingTop","paddingLeft","disabled","iconButton","controls","ChevronRightIcon"],"mappings":"wOAgDwC,gBACtCA,IAAAA,KACAC,IAAAA,KACAC,IAAAA,MACAC,IAAAA,aACAC,IAAAA,aACAC,IAAAA,QACAC,IAAAA,UAGMC,EAASC,sBAAoB,aAAc,CAAEC,UAFnDA,UAGMC,EAAKC,UAELC,EAAUZ,EAAO,EACjBa,EAAUb,EAAOC,EAAOC,EAMxBY,EAAmB,SAACC,GACxB,IAAMC,EAAmB,cAATD,EAAuBf,EAAO,EAAIA,EAAO,EAEzD,OAAO,WAAA,OAAOG,EAAeA,EAAaa,GAAWA,IAGjDC,GAAcjB,EAAO,GAAKC,EAAO,EACjCiB,EAAYlB,EAAOC,EACnBkB,EAAYjB,EAAQD,EAEpBmB,EAAcC,eAAY,WAC9B,IAAIC,EAAW,GASf,OAPAA,GAAY,QACZA,GAAYL,EACZK,GAAY,IACZA,GAAYJ,EAAYhB,EAAQe,EAAa,EAAIE,EAAYD,GAC7DI,GAAY,QACApB,IAGX,CAACe,EAAYC,EAAWhB,EAAOiB,IAElC,OACEI,gBAACC,sBACCd,GAAIA,EACJe,WAAW,SACXC,eAAe,gBACfC,GAAIpB,EAAOqB,iBACPtB,SAAAA,EAAWsB,WAEfL,gBAACM,wBAAOC,QAAS,SAAOxB,SAAAA,EAAWyB,mBACjCR,gBAACS,sBACCC,GAAG,OACHC,WAAW,SACXP,GAAIpB,EAAO4B,qBACP7B,SAAAA,EAAW6B,qCAKjBZ,gBAACa,sCACiB1B,yBAChB2B,SA/CiB,SAACC,GACpBlC,GAAcA,EAAamC,SAASD,EAAEE,OAAOC,SA+C3CA,MAAOxC,EACP0B,GAAIpB,EAAOmC,gBACPpC,SAAAA,EAAWoC,UAEdrC,EAAQsC,MAAMC,KAAI,SAAC3C,EAAM4C,GAAK,OAC7BtB,0BACEkB,MAAOxC,EACP6C,IAAKpC,EAAKT,EAAO4C,gBACDnC,MAAMT,MAAQ4C,GAE7B5C,QAMTsB,gBAACM,wBAAOC,QAAS,SAAOxB,SAAAA,EAAWyC,6BACjCxB,gBAACS,sBAAKC,GAAG,OAAON,GAAIpB,EAAOyC,eAAa1C,SAAAA,EAAW0C,SAChD5B,KAGHG,gBAACM,gCAAWvB,SAAAA,EAAW2C,mBACrB1B,gBAAC2B,yCACY,iBACKxC,8BAChByC,KACE5B,gBAAC6B,iCACCC,MAAM,QACN1B,GAAIpB,EAAO+C,oBACPhD,SAAAA,EAAWgD,eAGnBC,QAASzC,EAAiB,aAC1B0C,WAAW,OACXC,YAAY,OACZC,UAAW9C,EACXe,GAAIpB,EAAOoD,kBACPrD,SAAAA,EAAWsD,WAGjBrC,gBAAC2B,yCACY,iBACKxC,8BAChByC,KACE5B,gBAACsC,kCACCR,MAAM,QACN1B,GAAIpB,EAAO+C,oBACPhD,SAAAA,EAAWgD,eAGnBC,QAASzC,EAAiB,aAC1B4C,UAAW7C,EACX2C,WAAW,OACXC,YAAY,OACZ9B,GAAIpB,EAAOoD,kBACPrD,SAAAA,EAAWsD"}