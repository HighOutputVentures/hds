{"version":3,"file":"hds-pagination.cjs.production.min.js","sources":["../src/components/Pagination.tsx"],"sourcesContent":["import {\r\n  Flex,\r\n  HStack,\r\n  IconButton,\r\n  Select,\r\n  Text,\r\n  ThemingProps,\r\n  useMultiStyleConfig,\r\n} from '@chakra-ui/react';\r\nimport { ChevronLeftIcon, ChevronRightIcon } from '@highoutput/hds-icons';\r\nimport React, { FC, useCallback } from 'react';\r\n\r\nexport interface PaginationProps extends ThemingProps {\r\n  page: number;\r\n  size: number;\r\n  total: number;\r\n  onSizeChange?: (newSize: number) => void;\r\n  onPageChange?: (newPage: number) => void;\r\n  options: {\r\n    sizes: number[];\r\n  };\r\n  loading?: boolean;\r\n}\r\n\r\nconst Pagination: FC<PaginationProps> = ({\r\n  page,\r\n  size,\r\n  total,\r\n  onPageChange,\r\n  onSizeChange,\r\n  options,\r\n  variant,\r\n}) => {\r\n  const styles = useMultiStyleConfig('Pagination', { size, variant });\r\n\r\n  const hasPrev = page > 1;\r\n  const hasNext = page * size < total;\r\n\r\n  const handleSizeChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    if (onSizeChange) onSizeChange(parseInt(e.target.value));\r\n  };\r\n\r\n  const handlePageChange = (type: 'increment' | 'decrement') => {\r\n    const newPage = type === 'increment' ? page + 1 : page - 1;\r\n\r\n    return () => (onPageChange ? onPageChange(newPage) : newPage);\r\n  };\r\n\r\n  const indexStart = (page - 1) * size + 1;\r\n  const indexStop = page * size;\r\n  const remainder = total % size;\r\n\r\n  const getPageInfo = useCallback(() => {\r\n    let pageInfo = '';\r\n\r\n    pageInfo += 'Page ';\r\n    pageInfo += indexStart;\r\n    pageInfo += '-';\r\n    pageInfo += indexStop > total ? indexStart - 1 + remainder : indexStop;\r\n    pageInfo += ' of ';\r\n    pageInfo += total;\r\n\r\n    return pageInfo;\r\n  }, [indexStart, indexStop, total, remainder]);\r\n\r\n  return (\r\n    <Flex\r\n      alignItems=\"center\"\r\n      justifyContent=\"space-between\"\r\n      sx={styles.container}\r\n    >\r\n      <HStack spacing={2}>\r\n        <Text as=\"span\" whiteSpace=\"nowrap\" sx={styles.dropdownLabel}>\r\n          Show rows per page\r\n        </Text>\r\n\r\n        <Select\r\n          aria-label=\"Change page size\"\r\n          onChange={handleSizeChange}\r\n          value={size}\r\n          sx={styles.dropdown}\r\n        >\r\n          {options.sizes.map((size, index) => (\r\n            <option key={`${size}${index}`} value={size}>\r\n              {size}\r\n            </option>\r\n          ))}\r\n        </Select>\r\n      </HStack>\r\n\r\n      <HStack spacing={4}>\r\n        <Text as=\"span\" sx={styles.caption}>\r\n          {getPageInfo()}\r\n        </Text>\r\n\r\n        <HStack>\r\n          <IconButton\r\n            aria-label=\"Go to previous page\"\r\n            icon={<ChevronLeftIcon color=\"white\" sx={styles.controlIcons} />}\r\n            onClick={handlePageChange('decrement')}\r\n            paddingTop=\"10px\"\r\n            paddingLeft=\"12px\"\r\n            disabled={!hasPrev}\r\n            sx={styles.iconButton}\r\n          />\r\n\r\n          <IconButton\r\n            aria-label=\"Go to next page\"\r\n            icon={<ChevronRightIcon color=\"white\" sx={styles.controlIcons} />}\r\n            onClick={handlePageChange('increment')}\r\n            disabled={!hasNext}\r\n            paddingTop=\"10px\"\r\n            paddingLeft=\"12px\"\r\n            sx={styles.iconButton}\r\n          />\r\n        </HStack>\r\n      </HStack>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n"],"names":["page","size","total","onPageChange","onSizeChange","options","styles","useMultiStyleConfig","variant","hasPrev","hasNext","handlePageChange","type","newPage","indexStart","indexStop","remainder","getPageInfo","useCallback","pageInfo","React","Flex","alignItems","justifyContent","sx","container","HStack","spacing","Text","as","whiteSpace","dropdownLabel","Select","onChange","e","parseInt","target","value","dropdown","sizes","map","index","key","caption","IconButton","icon","ChevronLeftIcon","color","controlIcons","onClick","paddingTop","paddingLeft","disabled","iconButton","ChevronRightIcon"],"mappings":"wOAwBwC,gBACtCA,IAAAA,KACAC,IAAAA,KACAC,IAAAA,MACAC,IAAAA,aACAC,IAAAA,aACAC,IAAAA,QAGMC,EAASC,sBAAoB,aAAc,CAAEN,KAAAA,EAAMO,UAFzDA,UAIMC,EAAUT,EAAO,EACjBU,EAAUV,EAAOC,EAAOC,EAMxBS,EAAmB,SAACC,GACxB,IAAMC,EAAmB,cAATD,EAAuBZ,EAAO,EAAIA,EAAO,EAEzD,OAAO,WAAA,OAAOG,EAAeA,EAAaU,GAAWA,IAGjDC,GAAcd,EAAO,GAAKC,EAAO,EACjCc,EAAYf,EAAOC,EACnBe,EAAYd,EAAQD,EAEpBgB,EAAcC,eAAY,WAC9B,IAAIC,EAAW,GASf,OAPAA,GAAY,QACZA,GAAYL,EACZK,GAAY,IACZA,GAAYJ,EAAYb,EAAQY,EAAa,EAAIE,EAAYD,GAC7DI,GAAY,QACAjB,IAGX,CAACY,EAAYC,EAAWb,EAAOc,IAElC,OACEI,gBAACC,QACCC,WAAW,SACXC,eAAe,gBACfC,GAAIlB,EAAOmB,WAEXL,gBAACM,UAAOC,QAAS,GACfP,gBAACQ,QAAKC,GAAG,OAAOC,WAAW,SAASN,GAAIlB,EAAOyB,qCAI/CX,gBAACY,uBACY,mBACXC,SAxCiB,SAACC,GACpB9B,GAAcA,EAAa+B,SAASD,EAAEE,OAAOC,SAwC3CA,MAAOpC,EACPuB,GAAIlB,EAAOgC,UAEVjC,EAAQkC,MAAMC,KAAI,SAACvC,EAAMwC,GAAK,OAC7BrB,0BAAQsB,OAAQzC,EAAOwC,EAASJ,MAAOpC,GACpCA,QAMTmB,gBAACM,UAAOC,QAAS,GACfP,gBAACQ,QAAKC,GAAG,OAAOL,GAAIlB,EAAOqC,SACxB1B,KAGHG,gBAACM,cACCN,gBAACwB,2BACY,sBACXC,KAAMzB,gBAAC0B,mBAAgBC,MAAM,QAAQvB,GAAIlB,EAAO0C,eAChDC,QAAStC,EAAiB,aAC1BuC,WAAW,OACXC,YAAY,OACZC,UAAW3C,EACXe,GAAIlB,EAAO+C,aAGbjC,gBAACwB,2BACY,kBACXC,KAAMzB,gBAACkC,oBAAiBP,MAAM,QAAQvB,GAAIlB,EAAO0C,eACjDC,QAAStC,EAAiB,aAC1ByC,UAAW1C,EACXwC,WAAW,OACXC,YAAY,OACZ3B,GAAIlB,EAAO+C"}