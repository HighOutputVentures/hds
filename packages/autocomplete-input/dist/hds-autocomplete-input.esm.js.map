{"version":3,"file":"hds-autocomplete-input.esm.js","sources":["../src/AutoCompleteInput/styles.ts","../src/AutoCompleteInput/AutoCompleteInput.tsx"],"sourcesContent":["import { ChakraStylesConfig } from 'chakra-react-select';\r\n\r\nexport interface Item {\r\n  value: string | number;\r\n  label: string;\r\n}\r\n\r\ninterface GetStylesProps {\r\n  error?: boolean;\r\n  multiple?: boolean;\r\n  darkMode?: boolean;\r\n  testId?: string;\r\n}\r\n\r\nconst getStyles = ({\r\n  error,\r\n  darkMode,\r\n  testId,\r\n  multiple,\r\n}: GetStylesProps): ChakraStylesConfig<Item> => {\r\n  return {\r\n    menuList: provided => ({\r\n      ...provided,\r\n      _active: {\r\n        background: 'transparent',\r\n      },\r\n      '&::-webkit-scrollbar': {\r\n        width: '16px',\r\n        scrollBehavior: 'smooth',\r\n      },\r\n      '&::-webkit-scrollbar-thumb': {\r\n        background: '#E2E8F0',\r\n        border: '6px solid rgba(0, 0, 0, 0)',\r\n        backgroundClip: 'padding-box',\r\n        borderRadius: '9999px',\r\n      },\r\n      backgroundColor: darkMode ? '#2E2E2E' : undefined,\r\n      maxHeight: '210px',\r\n    }),\r\n    multiValueLabel: baseStyle => ({\r\n      ...baseStyle,\r\n      color: darkMode ? 'neutrals.100' : 'neutrals.700',\r\n      fontSize: 'paragraphs-xs-default',\r\n      letterSpacing: '0.02em',\r\n    }),\r\n\r\n    multiValue: baseStyle => {\r\n      return {\r\n        ...baseStyle,\r\n        backgroundColor: darkMode ? 'neutrals.800' : 'alpha.white.500',\r\n        border: `1px solid`,\r\n        borderColor: error\r\n          ? 'interface.error.700'\r\n          : darkMode\r\n          ? 'neutrals.700'\r\n          : 'neutrals.200',\r\n        borderRadius: '6px',\r\n        padding: '2px 5px',\r\n        height: '24px',\r\n        marginRight: '6px',\r\n        'data-testid': testId,\r\n      };\r\n    },\r\n    valueContainer: provided => ({ ...provided, padding: '0 0' }),\r\n    multiValueRemove: provided => ({\r\n      ...provided,\r\n      _hover: {\r\n        backgroundColor: 'none',\r\n      },\r\n      color: 'neutrals.400',\r\n    }),\r\n    control: (base, state) => {\r\n      return {\r\n        ...base,\r\n        _focus: {\r\n          borderColor: error ? 'interface.error.700' : 'brand.primary.700',\r\n        },\r\n        _focusVisible: {\r\n          outline: 'none',\r\n        },\r\n        _invalid: {\r\n          borderColor: 'interface.error.700',\r\n          _hover: { borderColor: 'none' },\r\n        },\r\n        _hover: {\r\n          borderColor: 'brand.primary.700',\r\n        },\r\n        border: '1px solid',\r\n        color: 'neutrals.900',\r\n        backgroundColor: darkMode ? 'neutrals.800' : 'alpha.white.500',\r\n        padding: multiple && state.hasValue ? '0px 14px' : '0px 12px',\r\n        height: '44px',\r\n        boxShadow: '0px 1px 2px rgba(16, 24, 40, 0.05)',\r\n        borderRadius: '8px',\r\n      };\r\n    },\r\n    option: (style, { isFocused, isSelected }) => {\r\n      return {\r\n        ...style,\r\n        backgroundColor: isFocused\r\n          ? darkMode\r\n            ? 'neutrals.700'\r\n            : 'gray.50'\r\n          : isSelected\r\n          ? darkMode\r\n            ? 'neutrals.800'\r\n            : 'gray.50'\r\n          : undefined,\r\n        _hover: {\r\n          backgroundColor: darkMode ? '#525252' : 'gray.50',\r\n        },\r\n        _active: {\r\n          backgroundColor: isSelected\r\n            ? darkMode\r\n              ? 'neutrals.700'\r\n              : 'gray.400'\r\n            : undefined,\r\n        },\r\n        color: darkMode ? 'neutrals.100' : 'neutrals.900',\r\n      };\r\n    },\r\n    menu: style => {\r\n      return {\r\n        ...style,\r\n        zIndex: 9,\r\n        backgroundColor: darkMode ? 'neutrals.800' : 'white',\r\n      };\r\n    },\r\n    singleValue: styles => ({\r\n      ...styles,\r\n      color: darkMode ? 'neutrals.100' : 'neutrals.900',\r\n      fontSize: 'paragraph-sm-default',\r\n    }),\r\n  };\r\n};\r\n\r\nexport default getStyles;\r\n","import { ChevronDownIcon, ChevronUpIcon } from '@chakra-ui/icons';\r\nimport { Avatar, BoxProps, HStack, Icon } from '@chakra-ui/react';\r\nimport {\r\n  FormContainer,\r\n  FormContainerProps,\r\n} from '@highoutput/hds-forms';\r\nimport {\r\n  chakraComponents,\r\n  MultiValue,\r\n  Select,\r\n  SingleValue,\r\n} from 'chakra-react-select';\r\nimport React, { useId } from 'react';\r\n\r\nimport getStyles from './styles';\r\n\r\nexport interface Item {\r\n  value: string | number;\r\n  label: string;\r\n}\r\n\r\nexport interface OptionItem extends Item {\r\n  avatar?: string;\r\n}\r\n\r\n// export interface AutoCompleteInputFieldPartProps\r\n//   extends FormContainerPartProps {\r\n//   reactChakraStyle?:\r\n//     | ChakraStylesConfig<Item, boolean, GroupBase<Item>>\r\n//     | undefined;\r\n// }\r\n\r\nexport interface AutoCompleteInputFieldProps\r\n  extends Omit<FormContainerProps, 'partProps'> {\r\n  options: OptionItem[];\r\n  loading?: boolean;\r\n  fieldLabelProps?: Omit<BoxProps, 'children'>;\r\n  required?: boolean;\r\n  placement?: 'auto' | 'top' | 'bottom';\r\n  multiple?: boolean;\r\n  darkMode?: boolean;\r\n  autoFocus?: boolean;\r\n  showDropdownIndicator?: boolean;\r\n  placeholder?: string;\r\n  // partProps?: Partial<AutoCompleteInputFieldPartProps>;\r\n  value?: string | string[] | number | number[];\r\n  onChangeValue: (...event: any[]) => void;\r\n}\r\n\r\nconst AutoCompleteInput = (props: AutoCompleteInputFieldProps) => {\r\n  const {\r\n    value,\r\n    options,\r\n    darkMode,\r\n    placement,\r\n    showDropdownIndicator,\r\n    errorMsg,\r\n    autoFocus,\r\n    disabled,\r\n    onChangeValue,\r\n    multiple,\r\n    loading,\r\n    placeholder,\r\n  } = props;\r\n\r\n  const uid = useId();\r\n\r\n  const styles = getStyles({\r\n    error: Boolean(errorMsg),\r\n    multiple,\r\n    darkMode: darkMode,\r\n  });\r\n\r\n  return (\r\n    <FormContainer {...props}>\r\n      <Select\r\n        options={options}\r\n        chakraStyles={styles}\r\n        placeholder={placeholder}\r\n        menuPlacement={placement ?? 'auto'}\r\n        isMulti={multiple}\r\n        inputId=\"auto-complete-input\"\r\n        useBasicStyles\r\n        aria-label=\"auto-complete-input\"\r\n        captureMenuScroll\r\n        backspaceRemovesValue\r\n        autoFocus={autoFocus}\r\n        isLoading={loading}\r\n        data-testid={`${uid}-auto-complete-input-field`}\r\n        isSearchable\r\n        isDisabled={disabled}\r\n        isClearable\r\n        components={{\r\n          ClearIndicator: () => null,\r\n          IndicatorSeparator: () => null,\r\n          DropdownIndicator: ({ selectProps }) => {\r\n            const icon = selectProps.menuIsOpen\r\n              ? ChevronUpIcon\r\n              : ChevronDownIcon;\r\n            return showDropdownIndicator ? (\r\n              <Icon as={icon} w={4} h={6} stroke=\"brand.primary.500\" />\r\n            ) : null;\r\n          },\r\n          MultiValueContainer: ({ children, data, ...props }) => (\r\n            <chakraComponents.MultiValueContainer {...props} data={data}>\r\n              <HStack align=\"center\" spacing=\"5px\">\r\n                {data.avatar && (\r\n                  <Avatar width=\"16px\" height=\"16px\" src={data.avatar} />\r\n                )}\r\n                {children}\r\n              </HStack>\r\n            </chakraComponents.MultiValueContainer>\r\n          ),\r\n        }}\r\n        onChange={(options: MultiValue<Item> | (SingleValue<Item> | null)) => {\r\n          return isArray<MultiValue<Item>>(options)\r\n            ? onChangeValue(options.map((o) => o.value))\r\n            : onChangeValue(options?.value ?? null);\r\n        }}\r\n        value={options.filter((option) => {\r\n          return Array.isArray(value)\r\n            ? value.some((val: string | number) => val === option.value)\r\n            : value === option.value;\r\n        })}\r\n      />\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default AutoCompleteInput;\r\n\r\nfunction isArray<T>(subject: unknown): subject is T {\r\n  return Array.isArray(subject);\r\n}\r\n"],"names":["getStyles","error","darkMode","testId","multiple","menuList","provided","_active","background","width","scrollBehavior","border","backgroundClip","borderRadius","backgroundColor","undefined","maxHeight","multiValueLabel","baseStyle","color","fontSize","letterSpacing","multiValue","borderColor","padding","height","marginRight","valueContainer","multiValueRemove","_hover","control","base","state","_focus","_focusVisible","outline","_invalid","hasValue","boxShadow","option","style","isFocused","isSelected","menu","zIndex","singleValue","styles","AutoCompleteInput","props","value","options","placement","showDropdownIndicator","errorMsg","autoFocus","disabled","onChangeValue","loading","placeholder","uid","useId","Boolean","React","FormContainer","Select","chakraStyles","menuPlacement","isMulti","inputId","useBasicStyles","captureMenuScroll","backspaceRemovesValue","isLoading","isSearchable","isDisabled","isClearable","components","ClearIndicator","IndicatorSeparator","DropdownIndicator","selectProps","icon","menuIsOpen","ChevronUpIcon","ChevronDownIcon","Icon","as","w","h","stroke","MultiValueContainer","children","data","chakraComponents","HStack","align","spacing","avatar","Avatar","src","onChange","isArray","map","o","filter","Array","some","val","subject"],"mappings":"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"}