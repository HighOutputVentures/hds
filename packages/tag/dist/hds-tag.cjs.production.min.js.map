{"version":3,"file":"hds-tag.cjs.production.min.js","sources":["../src/Checkbox.tsx","../src/utils.tsx","../src/Tag.tsx","../src/hooks.tsx","../src/withTag.ts"],"sourcesContent":["import { Checkbox, CheckboxProps } from '@chakra-ui/react';\nimport * as React from 'react';\n\nexport default React.forwardRef<HTMLInputElement, CheckboxProps>(function HdsCheckbox(props, ref) {\n  return <Checkbox ref={ref} aria-label=\"Select Item\" variant=\"hds\" {...props} />;\n});\n","import { Spacer, SpacerProps } from '@chakra-ui/react';\nimport * as React from 'react';\n\nexport function omit<T extends Record<string, any>, K extends (keyof T)[]>(\n  subject: T,\n  ...keys: K\n): Omit<T, K[number]> {\n  const copy = { ...subject }; /* do NOT mutate original object üòè */\n\n  for (const key of keys) {\n    if (key in copy) {\n      delete copy[key];\n    }\n  }\n\n  return copy;\n}\n\nexport function space(when: boolean, props: SpacerProps) {\n  return !when ? null : <Spacer height=\"1px\" {...props} />;\n}\n","import {\n  Avatar,\n  Box,\n  SystemStyleObject,\n  Tag,\n  TagCloseButton,\n  TagLabel,\n  TagLeftIcon,\n  Text,\n  useMultiStyleConfig,\n} from '@chakra-ui/react';\nimport * as React from 'react';\nimport Checkbox from './Checkbox';\nimport { useActualSize } from './hooks';\nimport { omit, space } from './utils';\n\ntype Closable =\n  | {\n      closable?: false;\n    }\n  | {\n      closable: true;\n      onClose(): void;\n    };\n\ntype Badgeable =\n  | {\n      badge?: false;\n    }\n  | {\n      badge: true;\n      badgeCount: number;\n    };\n\ntype Checkable =\n  | {\n      checkbox?: false;\n    }\n  | {\n      checkbox: true;\n      checked?: boolean;\n      onCheck(value: boolean): void;\n    };\n\ntype Size = 'sm' | 'md' | 'lg';\ntype Breakpoints = 'base' | 'sm' | 'md' | 'lg' | 'xl';\n\ntype BaseProps = {\n  label: string;\n  size?: Size | Partial<Record<Breakpoints, Size>>;\n  icon?: (props: React.ComponentProps<'svg'>) => JSX.Element;\n  avatar?: string;\n  indicator?: boolean;\n  __testId?: string;\n};\n\nexport type TagProps =\n  SystemStyleObject /* We're using this as it doesn't come with props unrelated to styles üëç */ &\n    BaseProps &\n    Badgeable &\n    Closable &\n    Checkable;\n\n/*\n *\n * HEADS UP! üì¢\n * We're heavily using Spacer due to design constraints. üòâ\n *\n */\n\nexport default React.forwardRef<HTMLDivElement, TagProps>(function HdsTag(p, ref) {\n  const { variant, label, __testId, ...props } = Object.assign({ size: 'md' }, p, {\n    variant: 'hds',\n  });\n\n  const size = useActualSize(props.size);\n  const styles = useMultiStyleConfig('Tag', { size, variant });\n\n  return (\n    <Tag\n      ref={ref}\n      size={size}\n      variant={variant}\n      __css={{\n        ...omit(\n          props,\n          'size',\n          'icon',\n          'badge',\n          'avatar',\n          'closable',\n          'checkbox',\n          'indicator',\n          /* @ts-ignore \"TypeScript doesn't know how to handle union types just yet ü§ê\" */\n          'onClose',\n          'checked',\n          'onCheck',\n          'badgeCount',\n        ),\n        /* inbuilt styles should not be overridable ü´† */\n        ...styles.container,\n      }}\n      data-testid={__testId}\n    >\n      {!!props.checkbox /* <!-- Checkbox --> */ && (\n        <React.Fragment>\n          {space(true, { width: { sm: '5px', md: '4px', lg: '5px' }[size] })}\n\n          <Checkbox\n            size={size}\n            variant={variant}\n            checked={props.checked}\n            onChange={({ target }) => {\n              props.onCheck(target.checked);\n            }}\n          />\n\n          {space(![props.avatar, props.icon].some(Boolean), {\n            width: { sm: '4px', md: '5px', lg: '6px' }[size],\n          })}\n        </React.Fragment>\n      )}\n\n      {!!props.icon /* <!-- Icon  --> */ && (\n        <React.Fragment>\n          {space(true, { width: { sm: '4px', md: '5px', lg: '6px' }[size] })}\n\n          <TagLeftIcon as={props.icon} role=\"img\" aria-label=\"Tag Icon\" sx={styles.icon} />\n\n          {space(true, { width: { sm: '4px', md: '5px', lg: '6px' }[size] })}\n        </React.Fragment>\n      )}\n\n      {!!props.avatar /* <!-- Avatar --> */ && (\n        <React.Fragment>\n          {space(true, { width: { sm: '4px', md: '5px', lg: '6px' }[size] })}\n\n          <Avatar src={props.avatar} role=\"img\" aria-label=\"Tag Avatar\" sx={styles.avatar} />\n\n          {space(true, { width: { sm: '4px', md: '5px', lg: '6px' }[size] })}\n        </React.Fragment>\n      )}\n\n      {!!props.indicator /* <!-- Indicator --> */ && (\n        <React.Fragment>\n          {space(true, { width: { sm: '7px', md: '8px', lg: '10px' }[size] })}\n\n          <Box role=\"presentation\" aria-label=\"Green Dot\" sx={styles.indicator} />\n\n          {space(true, { width: { sm: '5px', md: '6px', lg: '7px' }[size] })}\n        </React.Fragment>\n      )}\n\n      {!!label /* <!-- Label --> */ && (\n        <React.Fragment>\n          {space(![props.icon, props.avatar, props.indicator, props.checkbox].some(Boolean), {\n            width: { sm: '8px', md: '9px', lg: '10px' }[size],\n          })}\n\n          <TagLabel role=\"contentinfo\" __css={styles.label}>\n            {label}\n          </TagLabel>\n\n          {space(![props.closable, props.badge].some(Boolean), {\n            width: { sm: '8px', md: '9px', lg: '10px' }[size],\n          })}\n        </React.Fragment>\n      )}\n\n      {!!props.closable /* <!-- Close Button --> */ && (\n        <React.Fragment>\n          {space(true, { width: { sm: '5px', md: '5px', lg: '6px' }[size] })}\n\n          <TagCloseButton role=\"button\" aria-label=\"Close Tag\" onClick={props.onClose} />\n\n          {space(true, { width: { sm: '7px', md: '6px', lg: '7px' }[size] })}\n        </React.Fragment>\n      )}\n\n      {!!props.badge /* <!-- Badge --> */ && (\n        <React.Fragment>\n          {space(true, { width: { sm: '8px', md: '10px', lg: '12px' }[size] })}\n\n          <Text sx={styles.badge}>{props.badgeCount}</Text>\n\n          {space(true, { width: { sm: '8px', md: '8px', lg: '10px' }[size] })}\n        </React.Fragment>\n      )}\n    </Tag>\n  );\n});\n","import { useBreakpoint } from '@chakra-ui/react';\n\ntype ResponsiveSize = string | Partial<Record<string, string>>;\n\nexport function useActualSize<T extends ResponsiveSize>(size: T, fallback = 'md') {\n  const breakpoint = useBreakpoint();\n\n  const keys = typeof size === 'string' ? [] : Object.keys(size);\n\n  return typeof size === 'string'\n    ? size\n    : breakpoint in size\n    ? size[breakpoint]\n    : keys.length\n    ? size[findClosestBreakpoint(keys, breakpoint)]\n    : fallback;\n}\n\nfunction findClosestBreakpoint(keys: string[], base: string) {\n  if (keys.length > 0) {\n    if (keys.length === 1) return keys[0];\n\n    if (base === 'xl') {\n      if (keys.includes('xl')) return 'xl';\n      if (keys.includes('lg')) return 'lg';\n      if (keys.includes('md')) return 'md';\n      if (keys.includes('sm')) return 'sm';\n      if (keys.includes('base')) return 'base';\n    }\n\n    if (base === 'lg') {\n      if (keys.includes('lg')) return 'lg';\n      if (keys.includes('md')) return 'md';\n      if (keys.includes('sm')) return 'sm';\n      if (keys.includes('base')) return 'base';\n    }\n\n    if (base === 'md') {\n      if (keys.includes('md')) return 'md';\n      if (keys.includes('sm')) return 'sm';\n      if (keys.includes('base')) return 'base';\n    }\n\n    if (base === 'sm') {\n      if (keys.includes('sm')) return 'sm';\n      if (keys.includes('base')) return 'base';\n    }\n  }\n\n  /* shouldn't be reached but just in case. üòÖ */\n  return 'md';\n}\n","import { MultiStyleConfig } from '@chakra-ui/react';\n\n/*\n *\n * This is isolated so it doesn't bloat the theme\n * and won't be added to bundle if not used. üí∞\n * This approach is highly inspired by this ‚¨áÔ∏è\n * https://chakra-ui.com/community/recipes/prose\n *\n */\n\nexport default function withTag() {\n  const Tag: MultiStyleConfig = {\n    parts: [\n      'icon',\n      'label',\n      'badge',\n      'avatar',\n      'container',\n      'indicator',\n      'closeButton',\n      /* Checkbox is separated below üëá */\n    ],\n    baseStyle: {},\n    variants: {\n      hds() {\n        return {\n          container: {\n            bgColor: 'white',\n            border: '1px solid #F0F0F0',\n            paddingX: '0px',\n            rounded: '6px',\n          },\n          label: {\n            fontWeight: 'medium',\n            color: '#525252',\n            margin: '0px',\n          },\n          closeButton: {\n            minWidth: 'unset',\n            minHeight: 'unset',\n            color: '#C2C2C2',\n            rounded: '3px',\n            margin: '0px',\n            _hover: {\n              color: '#7A7A7A',\n            },\n            _active: {\n              boxShadow: '0px 0px 0px 4px #F2F4F7;',\n            },\n          },\n          indicator: {\n            width: '6px',\n            height: '6px',\n            bgColor: '#00C408',\n            rounded: 'full',\n            margin: '0px',\n          },\n          icon: {\n            width: '16px',\n            height: '16px',\n            margin: '0px',\n          },\n          avatar: {\n            width: '16px',\n            height: '16px',\n            margin: '0px',\n          },\n          badge: {\n            color: '#2E2E2E',\n            margin: '0px',\n          },\n        };\n      },\n    },\n    sizes: {\n      sm: {\n        container: {\n          paddingY: '3px',\n        },\n        label: {\n          fontSize: '12px',\n          lineHeight: '18px',\n        },\n        closeButton: {\n          width: '10px',\n          height: '10px',\n        },\n        badge: {\n          fontSize: '12px',\n          lineHeight: '18px',\n        },\n      },\n      md: {\n        container: {\n          paddingY: '3px',\n        },\n        label: {\n          fontSize: '14px',\n          lineHeight: '20px',\n        },\n        closeButton: {\n          width: '12px',\n          height: '12px',\n        },\n        badge: {\n          fontSize: '12px',\n          lineHeight: '18px',\n        },\n      },\n      lg: {\n        container: {\n          paddingY: '4px',\n        },\n        label: {\n          fontSize: '14px',\n          lineHeight: '20px',\n        },\n        closeButton: {\n          width: '14px',\n          height: '14px',\n        },\n        badge: {\n          fontSize: '14px',\n          lineHeight: '20px',\n        },\n      },\n    },\n    defaultProps: {\n      size: 'md',\n    },\n  };\n\n  const Checkbox: MultiStyleConfig = {\n    parts: ['icon', 'container', 'control', 'label'],\n    baseStyle: {},\n    variants: {\n      hds() {\n        return {\n          container: {\n            margin: 0,\n          },\n          label: {},\n          control: {\n            rounded: '4px',\n            bgColor: 'white',\n            borderColor: '#F0F0F0',\n            _hover: {\n              bgColor: '#EDE8FC',\n              borderColor: '#8A68EF',\n            },\n            _checked: {\n              bgColor: '#8A68EF',\n              borderColor: '#8A68EF',\n              _hover: {\n                bgColor: '#4A3880',\n                borderColor: '#4A3880',\n              },\n            },\n            _focus: {\n              boxShadow: 'none',\n            },\n            _active: {\n              boxShadow: '0px 1px 2px rgba(16, 24, 40, 0.05), 0px 0px 0px 4px #F4EBFF',\n            },\n            transition: 'all 300ms ease-in-out',\n          },\n        };\n      },\n    },\n    sizes: {\n      sm: {\n        container: {\n          width: '14px',\n          height: '14px',\n        },\n      },\n      md: {\n        container: {\n          width: '16px',\n          height: '16px',\n        },\n      },\n      lg: {\n        container: {\n          width: '18px',\n          height: '18px',\n        },\n      },\n    },\n    defaultProps: {},\n  };\n\n  return { components: { Tag, Checkbox } };\n}\n"],"names":["React","props","ref","Checkbox","variant","omit","subject","copy","keys","key","space","when","Spacer","height","p","Object","assign","size","label","__testId","fallback","breakpoint","useBreakpoint","length","base","includes","findClosestBreakpoint","useActualSize","styles","useMultiStyleConfig","Tag","__css","container","checkbox","width","sm","md","lg","checked","onChange","onCheck","target","avatar","icon","some","Boolean","TagLeftIcon","as","role","sx","Avatar","src","indicator","Box","TagLabel","closable","badge","TagCloseButton","onClick","onClose","Text","badgeCount","components","parts","baseStyle","variants","hds","bgColor","border","paddingX","rounded","fontWeight","color","margin","closeButton","minWidth","minHeight","_hover","_active","boxShadow","sizes","paddingY","fontSize","lineHeight","defaultProps","control","borderColor","_checked","_focus","transition"],"mappings":"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"}